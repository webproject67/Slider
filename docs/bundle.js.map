{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/types.ts","webpack:///./src/scripts/components/observer/Observer.ts","webpack:///./src/scripts/index.ts","webpack:///./src/scripts/slider-jquery.ts","webpack:///./src/scripts/components/slider/Slider.ts","webpack:///./src/scripts/components/presenter/Presenter.ts","webpack:///./src/scripts/components/model/Model.ts","webpack:///./src/scripts/components/view/View.ts","webpack:///./src/scripts/components/view/TrackView.ts","webpack:///./src/scripts/components/view/ProgressView.ts","webpack:///./src/scripts/components/view/CircleView.ts","webpack:///./src/scripts/components/view/FlagView.ts","webpack:///./src/scripts/components/view/ScaleView.ts","webpack:///./src/scripts/panel-jquery.ts","webpack:///./src/scripts/components/panel/Panel.ts","webpack:///./src/scripts/components/configuringPanel/ConfiguringPanel.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelUpdate","ViewHandler","PanelHandler","this","observers","subscribe","fn","push","broadcast","data","forEach","subscriber","$","slider","options","main","init","getElement","presenter","getState","setState","state","cb","extend","min","max","from","fromPercent","to","toPercent","step","view","range","flag","progress","scale","model","type","HANDLE_CIRCLE_FROM_MOUSE_DOWN","setStateFrom","HANDLE_CIRCLE_TO_MOUSE_DOWN","setStateTo","HANDLE_TRACK_CLICK","HANDLE_SCALE_CLICK","setStateFromOrTo","Error","UPDATE_MODEL_STATE","updateView","valuePercent","cloneValuePercent","calculateValue","Number","Boolean","validation","stepPercent","stepPercentResult","Math","round","toFixed","generalValue","isInteger","abs","fromMaxBool","fromMinBool","fromToBool","toMaxBool","start","render","toggleClassNameSlider","track","updateElement","circle","appendChild","remove","createElement","addEventListener","handleTrackClick","querySelectorAll","handleCircleMouseDown","handlePinMouseDown","item","handleScaleClick","wrapper","evt","pin","currentTarget","classNameBoolHMin","classList","contains","classNameBoolVMin","classNameBoolVMax","querySelector","replaceCircle","preventDefault","onMouseMove","event","TouchEvent","targetTouches","circleMin","circleMax","circleVMin","circleVMax","corner","pageX","offsetLeft","clientWidth","pageY","offsetTop","clientHeight","onMouseUp","document","removeEventListener","parseFloat","style","left","className","newElement","add","element","top","height","marginLeft","marginRight","quantityCircle","createElements","index","zIndex","getCircleMax","getCircleVerticalMax","indexAndRangeBool","quantityPin","textContent","getPinMax","String","getPinVerticalMax","quantityItem","quantity","classNameList","classNameQuantity","stepCount","ceil","percent","display","panel","configuringPanel","HANDLE_INPUT_MIN_CHANGE","HANDLE_INPUT_MAX_CHANGE","HANDLE_INPUT_FROM_CHANGE","HANDLE_INPUT_TO_CHANGE","HANDLE_INPUT_STEP_CHANGE","HANDLE_INPUT_VIEW_CHANGE","HANDLE_INPUT_RANGE_CHANGE","HANDLE_INPUT_FLAG_CHANGE","HANDLE_INPUT_PROGRESS_CHANGE","HANDLE_INPUT_SCALE_CHANGE","label","dataset","input","elem","createElementInput","handleInputChange","createElementLabel","tag","labelElement","inputMin","inputMax","inputFrom","inputTo","inputStep","inputElement","checked"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","interface IState {\n  min: number;\n  max: number;\n  from: number;\n  fromPercent: number;\n  to: number;\n  toPercent: number;\n  step: number;\n  view: boolean;\n  range: boolean;\n  flag: boolean;\n  scale: boolean;\n  progress: boolean;\n}\n\ninterface IData {\n  label: string;\n  dataset: string;\n  type: string;\n}\n\nenum ModelUpdate {\n  UPDATE_MODEL_STATE = 'updateModelState',\n}\n\ntype ModelType = {\n  type: ModelUpdate.UPDATE_MODEL_STATE;\n  value: IState;\n};\n\nenum ViewHandler {\n  HANDLE_CIRCLE_FROM_MOUSE_DOWN = 'handleCircleFromMouseDown',\n  HANDLE_CIRCLE_TO_MOUSE_DOWN = 'handleCircleToMouseDown',\n  HANDLE_TRACK_CLICK = 'handleTrackClick',\n  HANDLE_SCALE_CLICK = 'handleScaleClick',\n}\n\ntype FromCircle = {\n  type: ViewHandler.HANDLE_CIRCLE_FROM_MOUSE_DOWN;\n  value: number;\n};\n\ntype ToCircle = {\n  type: ViewHandler.HANDLE_CIRCLE_TO_MOUSE_DOWN;\n  value: number;\n};\n\ntype Track = {\n  type: ViewHandler.HANDLE_TRACK_CLICK;\n  value: number;\n};\n\ntype Circle = {\n  type: ViewHandler.HANDLE_SCALE_CLICK;\n  value: number;\n};\n\ntype ViewTypes = FromCircle | ToCircle | Track | Circle;\n\nenum PanelHandler {\n  HANDLE_INPUT_MIN_CHANGE = 'handleInputMinChange',\n  HANDLE_INPUT_MAX_CHANGE = 'handleInputMaxChange',\n  HANDLE_INPUT_FROM_CHANGE = 'handleInputFromChange',\n  HANDLE_INPUT_TO_CHANGE = 'handleInputToChange',\n  HANDLE_INPUT_STEP_CHANGE = 'handleInputStepChange',\n  HANDLE_INPUT_VIEW_CHANGE = 'handleInputViewChange',\n  HANDLE_INPUT_RANGE_CHANGE = 'handleInputRangeChange',\n  HANDLE_INPUT_FLAG_CHANGE = 'handleInputFlagChange',\n  HANDLE_INPUT_SCALE_CHANGE = 'handleInputScaleChange',\n  HANDLE_INPUT_PROGRESS_CHANGE = 'handleInputProgressChange',\n}\n\ntype Min = {\n  type: PanelHandler.HANDLE_INPUT_MIN_CHANGE;\n  value: number;\n};\n\ntype Max = {\n  type: PanelHandler.HANDLE_INPUT_MAX_CHANGE;\n  value: number;\n};\n\ntype From = {\n  type: PanelHandler.HANDLE_INPUT_FROM_CHANGE;\n  value: number;\n};\n\ntype To = {\n  type: PanelHandler.HANDLE_INPUT_TO_CHANGE;\n  value: number;\n};\n\ntype Step = {\n  type: PanelHandler.HANDLE_INPUT_STEP_CHANGE;\n  value: number;\n};\n\ntype View = {\n  type: PanelHandler.HANDLE_INPUT_VIEW_CHANGE;\n  value: boolean;\n};\n\ntype Range = {\n  type: PanelHandler.HANDLE_INPUT_RANGE_CHANGE;\n  value: boolean;\n};\n\ntype Flag = {\n  type: PanelHandler.HANDLE_INPUT_FLAG_CHANGE;\n  value: boolean;\n};\n\ntype Progress = {\n  type: PanelHandler.HANDLE_INPUT_PROGRESS_CHANGE;\n  value: boolean;\n};\n\ntype Scale = {\n  type: PanelHandler.HANDLE_INPUT_SCALE_CHANGE;\n  value: boolean;\n};\n\ntype PanelTypes =\n  | Min\n  | Max\n  | From\n  | To\n  | Step\n  | View\n  | Range\n  | Flag\n  | Progress\n  | Scale;\n\nexport {\n  IState,\n  IData,\n  ModelUpdate,\n  ModelType,\n  ViewHandler,\n  ViewTypes,\n  PanelHandler,\n  PanelTypes,\n};\n","export default class Observer<T> {\n  private observers: ((data: T) => void)[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  public subscribe(fn: (data: T) => void): void {\n    this.observers.push(fn);\n  }\n\n  public broadcast(data: T): void {\n    this.observers.forEach((subscriber) => subscriber(data));\n  }\n}\n","import './slider-jquery';\nimport './panel-jquery';\nimport '../styles/style.scss';\n","import Slider from './components/slider/Slider';\nimport { IState } from './types';\n\ndeclare global {\n  interface JQuery {\n    slider(options: IState): Slider;\n  }\n}\n\n$.fn.slider = function f(options: IState) {\n  return new Slider(this[0], options);\n};\n","import Presenter from '../presenter/Presenter';\nimport { IState, ModelType } from '../../types';\n\nexport default class Slider {\n  private presenter!: Presenter;\n\n  constructor(main: HTMLElement, options: IState) {\n    this.init(main, options);\n  }\n\n  public getElement(): HTMLElement {\n    return this.presenter.getElement();\n  }\n\n  public getState(): IState {\n    return this.presenter.getState().value;\n  }\n\n  public setState(state: Partial<IState>): void {\n    this.presenter.setState(state);\n  }\n\n  public subscribe(cb: (data: ModelType) => void): void {\n    this.presenter.subscribe(cb);\n  }\n\n  private init(main: HTMLElement, options: IState): void {\n    const state = $.extend(\n      {\n        min: 0,\n        max: 100,\n        from: 0,\n        fromPercent: 0,\n        to: 100,\n        toPercent: 100,\n        step: 1,\n        view: false,\n        range: false,\n        flag: true,\n        progress: true,\n        scale: true,\n      },\n      options\n    );\n\n    this.presenter = new Presenter(main, state);\n  }\n}\n","import Model from '../model/Model';\nimport View from '../view/View';\nimport {\n  IState,\n  ModelType,\n  ModelUpdate,\n  ViewHandler,\n  ViewTypes,\n} from '../../types';\n\nexport default class Presenter {\n  private model: Model;\n\n  private view: View;\n\n  constructor(main: HTMLElement, state: IState) {\n    this.model = new Model(state);\n    this.view = new View(main);\n    this.init();\n  }\n\n  public getElement(): HTMLElement {\n    return this.view.getElement();\n  }\n\n  public getState(): ModelType {\n    return this.model.getState();\n  }\n\n  public setState(state: Partial<IState>): void {\n    this.model.setState(state);\n  }\n\n  public subscribe(cb: (data: ModelType) => void): void {\n    this.model.subscribe(cb);\n  }\n\n  private init(): void {\n    const cbView = (data: ViewTypes) => {\n      switch (data.type) {\n        case ViewHandler.HANDLE_CIRCLE_FROM_MOUSE_DOWN:\n          this.model.setStateFrom(data.value);\n          break;\n        case ViewHandler.HANDLE_CIRCLE_TO_MOUSE_DOWN:\n          this.model.setStateTo(data.value);\n          break;\n        case ViewHandler.HANDLE_TRACK_CLICK:\n          this.model.setStateFromOrTo(data.value);\n          break;\n        case ViewHandler.HANDLE_SCALE_CLICK:\n          this.model.setStateFromOrTo(data.value);\n          break;\n        default:\n          throw new Error('there is no such event');\n      }\n    };\n    this.view.subscribe(cbView);\n\n    const cbModel = (data: ModelType) => {\n      switch (data.type) {\n        case ModelUpdate.UPDATE_MODEL_STATE:\n          this.view.updateView(data.value);\n          break;\n        default:\n          throw new Error('no state');\n      }\n    };\n    this.model.subscribe(cbModel);\n\n    this.model.broadcast(this.model.getState());\n  }\n}\n","import Observer from '../observer/Observer';\nimport { IState, ModelType, ModelUpdate } from '../../types';\n\nexport default class Model extends Observer<ModelType> {\n  private state: IState;\n\n  constructor(state: IState) {\n    super();\n    this.state = state;\n    this.setState(state);\n  }\n\n  public getState(): ModelType {\n    return { type: ModelUpdate.UPDATE_MODEL_STATE, value: { ...this.state } };\n  }\n\n  public setStateFrom(valuePercent: number): void {\n    let cloneValuePercent = valuePercent;\n    if (valuePercent > this.state.toPercent)\n      cloneValuePercent = this.state.toPercent;\n    const value =\n      valuePercent >= 100 ? 100 : this.calculateValue(cloneValuePercent);\n    this.setState({ fromPercent: cloneValuePercent, from: value });\n  }\n\n  public setStateTo(valuePercent: number): void {\n    let cloneValuePercent = valuePercent;\n    if (valuePercent < this.state.fromPercent)\n      cloneValuePercent = this.state.fromPercent;\n    const value =\n      valuePercent >= 100 ? 100 : this.calculateValue(cloneValuePercent);\n    this.setState({ toPercent: cloneValuePercent, to: value });\n  }\n\n  public setStateFromOrTo(valuePercent: number): void {\n    if (this.state.fromPercent > valuePercent) {\n      this.setStateFrom(valuePercent);\n    } else {\n      this.setStateTo(valuePercent);\n    }\n  }\n\n  public setState(state: Partial<IState>): void {\n    if (typeof state.min !== 'undefined') {\n      this.state.min = Number(state.min);\n      this.state.from = this.state.min;\n    }\n\n    if (typeof state.max !== 'undefined') {\n      this.state.max = Number(state.max);\n      this.state.to = this.state.max;\n    }\n\n    if (typeof state.step !== 'undefined') {\n      this.state.step = Number(state.step);\n      this.state.from = this.state.min;\n      this.state.to = this.state.max;\n    }\n\n    if (typeof state.from !== 'undefined') this.state.from = Number(state.from);\n\n    if (typeof state.fromPercent !== 'undefined')\n      this.state.fromPercent = Number(state.fromPercent);\n\n    if (typeof state.to !== 'undefined') this.state.to = Number(state.to);\n\n    if (typeof state.toPercent !== 'undefined')\n      this.state.toPercent = Number(state.toPercent);\n\n    if (typeof state.view !== 'undefined')\n      this.state.view = Boolean(state.view);\n\n    if (typeof state.range !== 'undefined') {\n      this.state.range = Boolean(state.range);\n      this.state.from = this.state.min;\n    }\n\n    if (typeof state.flag !== 'undefined')\n      this.state.flag = Boolean(state.flag);\n\n    if (typeof state.progress !== 'undefined')\n      this.state.progress = Boolean(state.progress);\n\n    if (typeof state.scale !== 'undefined')\n      this.state.scale = Boolean(state.scale);\n\n    this.validation();\n  }\n\n  private calculateValue(valuePercent: number): number {\n    const { min, max, step } = this.state;\n    const stepCount: number = (max - min) / step;\n    const stepPercent: number = 100 / stepCount;\n    const stepPercentResult: number =\n      Math.round(valuePercent / stepPercent) * stepPercent;\n    return Number(((stepPercentResult / stepPercent) * step).toFixed()) + min;\n  }\n\n  private validation(): void {\n    if (this.state.min >= this.state.max) {\n      this.state.min = this.state.max - 1;\n      this.state.from = this.state.max - 1;\n    }\n\n    const generalValue = this.state.max - this.state.min;\n\n    if (!Number.isInteger(this.state.step))\n      this.state.step = Math.round(this.state.step);\n    if (this.state.step === 0) this.state.step = 1;\n    if (this.state.step < 0) this.state.step = Math.abs(this.state.step);\n    if (this.state.step > generalValue || this.state.step > generalValue)\n      this.state.step = generalValue;\n\n    const stepCount: number = generalValue / this.state.step;\n    const stepPercent: number = 100 / stepCount;\n\n    const fromMaxBool = this.state.from > this.state.max;\n    const fromMinBool = this.state.from < this.state.min;\n    const fromToBool = this.state.from > this.state.to;\n    const generalFrom = fromMinBool || fromMaxBool || fromToBool;\n\n    if (generalFrom) this.state.from = this.state.min;\n    this.state.fromPercent =\n      ((this.state.from - this.state.min) / this.state.step) * stepPercent;\n\n    const toMaxBool = this.state.to > this.state.max;\n    const toMinBool = this.state.to < this.state.min;\n    const generalTo = toMinBool || toMaxBool;\n\n    if (generalTo) this.state.to = this.state.max;\n    this.state.toPercent =\n      ((this.state.to - this.state.min) / this.state.step) * stepPercent;\n\n    this.broadcast({\n      type: ModelUpdate.UPDATE_MODEL_STATE,\n      value: { ...this.state },\n    });\n  }\n}\n","import Observer from '../observer/Observer';\nimport TrackView from './TrackView';\nimport ProgressView from './ProgressView';\nimport CircleView from './CircleView';\nimport FlagView from './FlagView';\nimport ScaleView from './ScaleView';\nimport { IState, ViewHandler, ViewTypes } from '../../types';\n\nexport default class View extends Observer<ViewTypes> {\n  private main: HTMLElement;\n\n  private start: boolean;\n\n  private wrapper!: HTMLElement;\n\n  private slider!: HTMLElement;\n\n  private track!: TrackView;\n\n  private progress!: ProgressView;\n\n  private circle!: CircleView;\n\n  private flag!: FlagView;\n\n  private scale!: ScaleView;\n\n  private state!: IState;\n\n  constructor(main: HTMLElement) {\n    super();\n    this.main = main;\n    this.start = true;\n  }\n\n  public getElement(): HTMLElement {\n    return this.main;\n  }\n\n  public updateView(state: IState): void {\n    this.state = state;\n\n    if (this.start) {\n      this.render();\n      return;\n    }\n\n    this.toggleClassNameSlider();\n    this.track.updateElement(this.state);\n    this.progress.updateElement(this.state);\n    this.circle.updateElement(this.state);\n    this.flag.updateElement(this.state);\n    this.scale.updateElement(this.state);\n\n    if (this.state.progress) {\n      this.track.getElement().appendChild(this.progress.getElement());\n    } else {\n      this.progress.getElement().remove();\n    }\n\n    if (this.state.flag) {\n      this.slider.appendChild(this.flag.getElement());\n    } else {\n      this.flag.getElement().remove();\n    }\n\n    if (this.state.scale) {\n      this.slider.appendChild(this.scale.getElement());\n    } else {\n      this.scale.getElement().remove();\n    }\n  }\n\n  private render(): void {\n    this.start = false;\n\n    this.slider = this.createElement('slider__inner');\n    this.toggleClassNameSlider();\n\n    this.track = new TrackView(this.state);\n    this.track\n      .getElement()\n      .addEventListener('click', this.handleTrackClick.bind(this));\n    this.slider.appendChild(this.track.getElement());\n\n    this.progress = new ProgressView(this.state);\n    if (this.state.progress)\n      this.track.getElement().appendChild(this.progress.getElement());\n\n    this.circle = new CircleView(this.state);\n    this.circle\n      .getElement()\n      .querySelectorAll<HTMLDivElement>('div')\n      .forEach((circle) => {\n        circle.addEventListener(\n          'mousedown',\n          this.handleCircleMouseDown.bind(this)\n        );\n        circle.addEventListener(\n          'touchstart',\n          this.handleCircleMouseDown.bind(this)\n        );\n      });\n    this.slider.appendChild(this.circle.getElement());\n\n    this.flag = new FlagView(this.state);\n    this.flag\n      .getElement()\n      .querySelectorAll<HTMLDivElement>('div')\n      .forEach((flag) => {\n        flag.addEventListener('mousedown', this.handlePinMouseDown.bind(this));\n        flag.addEventListener('touchstart', this.handlePinMouseDown.bind(this));\n      });\n    if (this.state.flag) this.slider.appendChild(this.flag.getElement());\n\n    this.scale = new ScaleView(this.state);\n    this.scale\n      .getElement()\n      .querySelectorAll<HTMLDivElement>('.slider__item')\n      .forEach((item) =>\n        item.addEventListener('click', this.handleScaleClick.bind(this))\n      );\n    if (this.state.scale) this.slider.appendChild(this.scale.getElement());\n\n    this.wrapper = this.createElement('slider__wrapper');\n    this.wrapper.appendChild(this.slider);\n    this.main.appendChild(this.wrapper);\n  }\n\n  private handlePinMouseDown(evt: Event): void {\n    const pin: HTMLElement = <HTMLElement>evt.currentTarget;\n    const classNameBoolHMin = pin.classList.contains(\n      'slider__pin_position_minimum'\n    );\n    const classNameBoolVMin = pin.classList.contains(\n      'slider__pin-vertical_position_minimum'\n    );\n    const classNameBoolVMax = pin.classList.contains(\n      'slider__pin-vertical_position_maximum'\n    );\n\n    let circle: HTMLElement | null = this.circle\n      .getElement()\n      .querySelector('.slider__circle_position_maximum');\n\n    if (classNameBoolHMin)\n      circle = this.circle\n        .getElement()\n        .querySelector('.slider__circle_position_minimum');\n    if (classNameBoolVMin)\n      circle = this.circle\n        .getElement()\n        .querySelector('.slider__circle_position_vertical-minimum');\n    if (classNameBoolVMax)\n      circle = this.circle\n        .getElement()\n        .querySelector('.slider__circle_position_vertical-maximum');\n\n    if (circle) this.replaceCircle(evt, circle);\n  }\n\n  private handleCircleMouseDown(evt: Event): void {\n    const circle: HTMLElement = <HTMLElement>evt.currentTarget;\n    this.replaceCircle(evt, circle);\n  }\n\n  private replaceCircle(evt: Event, circle: HTMLElement): void {\n    evt.preventDefault();\n\n    const onMouseMove = (evt: MouseEvent | TouchEvent): void => {\n      const getEvent = () =>\n        evt instanceof TouchEvent ? evt.targetTouches[0] : evt;\n      const event = getEvent();\n\n      const circleMin = circle.classList.contains(\n        'slider__circle_position_minimum'\n      );\n      const circleMax = circle.classList.contains(\n        'slider__circle_position_maximum'\n      );\n      const circleVMin = circle.classList.contains(\n        'slider__circle_position_vertical-minimum'\n      );\n      const circleVMax = circle.classList.contains(\n        'slider__circle_position_vertical-maximum'\n      );\n\n      let corner: number =\n        ((event.pageX - this.slider.offsetLeft) /\n          this.track.getElement().clientWidth) *\n        100;\n\n      if (this.state.view)\n        corner =\n          ((event.pageY - this.slider.offsetTop) /\n            this.track.getElement().clientHeight) *\n          100;\n\n      if (circleMin || circleVMin)\n        this.broadcast({\n          type: ViewHandler.HANDLE_CIRCLE_FROM_MOUSE_DOWN,\n          value: corner,\n        });\n      if (circleMax || circleVMax)\n        this.broadcast({\n          type: ViewHandler.HANDLE_CIRCLE_TO_MOUSE_DOWN,\n          value: corner,\n        });\n    };\n\n    const onMouseUp = () => {\n      document.removeEventListener('touchmove', onMouseMove);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('touchend', onMouseUp);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n\n    document.addEventListener('touchmove', onMouseMove);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('touchend', onMouseUp);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n\n  private handleTrackClick(evt: MouseEvent): void {\n    let corner: number =\n      ((evt.pageX - this.slider.offsetLeft) /\n        this.track.getElement().clientWidth) *\n      100;\n\n    if (this.state.view)\n      corner =\n        ((evt.pageY - this.slider.offsetTop) /\n          this.track.getElement().clientHeight) *\n        100;\n\n    this.broadcast({ type: ViewHandler.HANDLE_TRACK_CLICK, value: corner });\n  }\n\n  private handleScaleClick(evt: MouseEvent): void {\n    const scale: HTMLElement = <HTMLElement>evt.currentTarget;\n    const corner: number = parseFloat(scale.style.left);\n    this.broadcast({ type: ViewHandler.HANDLE_SCALE_CLICK, value: corner });\n  }\n\n  private createElement(className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    newElement.className = className;\n    return newElement;\n  }\n\n  private toggleClassNameSlider(): void {\n    const className = 'slider__inner_size_height';\n\n    if (this.state.view) {\n      this.slider.classList.add(className);\n    } else {\n      this.slider.classList.remove(className);\n    }\n  }\n}\n","import { IState } from '../../types';\n\nexport default class TrackView {\n  private element!: HTMLElement;\n\n  constructor(state: IState) {\n    this.createElement(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const className = 'slider__track_size_height';\n\n    if (state.view) {\n      this.element.classList.add(className);\n    } else {\n      this.element.classList.remove(className);\n    }\n\n    return this.element;\n  }\n\n  private createElement(state: IState): void {\n    this.element = document.createElement('div');\n    this.element.className = 'slider__track';\n    this.updateElement(state);\n  }\n}\n","import { IState } from '../../types';\n\nexport default class ProgressView {\n  private element!: HTMLElement;\n\n  constructor(state: IState) {\n    this.createElement(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const { view, fromPercent, toPercent } = state;\n    const className = 'slider__bar_size_width';\n\n    this.element.style.top = '';\n    this.element.style.height = '';\n    this.element.style.marginLeft = '';\n    this.element.style.marginRight = '';\n\n    if (view) {\n      this.element.classList.add(className);\n      this.element.style.top = `${fromPercent}%`;\n      this.element.style.height = `${toPercent - fromPercent}%`;\n    } else {\n      this.element.classList.remove(className);\n      this.element.style.marginLeft = `${fromPercent}%`;\n      this.element.style.marginRight = `${100 - toPercent}%`;\n    }\n\n    return this.element;\n  }\n\n  private createElement(state: IState): void {\n    this.element = document.createElement('div');\n    this.element.className = 'slider__bar';\n    this.updateElement(state);\n  }\n}\n","import { IState } from '../../types';\n\nexport default class CircleView {\n  private element!: HTMLElement;\n\n  private quantityCircle: number;\n\n  private circle: HTMLElement[];\n\n  constructor(state: IState) {\n    this.quantityCircle = 2;\n    this.circle = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const { max, to, range, view, fromPercent, toPercent } = state;\n\n    for (let index = 0; index < this.quantityCircle; index += 1) {\n      this.circle[index].className = '';\n      this.circle[index].style.left = '';\n      this.circle[index].style.top = '';\n      this.circle[index].style.zIndex = '';\n\n      const getCircleMin = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_minimum';\n        this.circle[index].style.left = `${fromPercent}%`;\n        if (to === max) this.circle[index].style.zIndex = '1';\n      };\n\n      const getCircleMax = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_maximum';\n        this.circle[index].style.left = `${toPercent}%`;\n      };\n\n      const getCircleVerticalMin = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_vertical-minimum';\n        this.circle[index].style.top = `${fromPercent}%`;\n        if (to === max) this.circle[index].style.zIndex = '1';\n      };\n\n      const getCircleVerticalMax = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_vertical-maximum';\n        this.circle[index].style.top = `${toPercent}%`;\n      };\n\n      const indexAndRangeBool = !index && !range;\n\n      if (indexAndRangeBool && !view) getCircleMax();\n      if (indexAndRangeBool && view) getCircleVerticalMax();\n      if (range && !view) {\n        if (!index) {\n          getCircleMin();\n        } else {\n          getCircleMax();\n        }\n      }\n\n      if (range && view) {\n        if (!index) {\n          getCircleVerticalMin();\n        } else {\n          getCircleVerticalMax();\n        }\n      }\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: IState): void {\n    this.element = this.createElement('slider__circles');\n\n    for (let i = 0; i < this.quantityCircle; i += 1) {\n      this.circle[i] = this.createElement();\n      this.element.appendChild(this.circle[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className?: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    if (className) newElement.className = className;\n    return newElement;\n  }\n}\n","import { IState } from '../../types';\n\nexport default class FlagView {\n  private element!: HTMLElement;\n\n  private quantityPin: number;\n\n  private pin: HTMLElement[];\n\n  constructor(state: IState) {\n    this.quantityPin = 2;\n    this.pin = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const { range, view, fromPercent, toPercent, from, to, max } = state;\n\n    for (let index = 0; index < this.quantityPin; index += 1) {\n      this.pin[index].className = '';\n      this.pin[index].textContent = '';\n      this.pin[index].style.left = '';\n      this.pin[index].style.top = '';\n      this.pin[index].style.zIndex = '';\n\n      const getPinMin = () => {\n        this.pin[index].className = 'slider__pin slider__pin_position_minimum';\n        this.pin[index].textContent = String(from);\n        this.pin[index].style.left = `${fromPercent}%`;\n        if (to === max) this.pin[index].style.zIndex = '1';\n      };\n\n      const getPinMax = () => {\n        this.pin[index].className = 'slider__pin slider__pin_position_maximum';\n        this.pin[index].textContent = String(to);\n        this.pin[index].style.left = `${toPercent}%`;\n      };\n\n      const getPinVerticalMin = () => {\n        this.pin[index].className =\n          'slider__pin-vertical slider__pin-vertical_position_minimum';\n        this.pin[index].textContent = String(from);\n        this.pin[index].style.top = `${fromPercent}%`;\n        if (to === max) this.pin[index].style.zIndex = '1';\n      };\n\n      const getPinVerticalMax = () => {\n        this.pin[index].className =\n          'slider__pin-vertical slider__pin-vertical_position_maximum';\n        this.pin[index].textContent = String(to);\n        this.pin[index].style.top = `${toPercent}%`;\n      };\n\n      const indexAndRangeBool = !index && !range;\n\n      if (indexAndRangeBool && !view) getPinMax();\n      if (indexAndRangeBool && view) getPinVerticalMax();\n      if (range && !view) {\n        if (!index) {\n          getPinMin();\n        } else {\n          getPinMax();\n        }\n      }\n\n      if (range && view) {\n        if (!index) {\n          getPinVerticalMin();\n        } else {\n          getPinVerticalMax();\n        }\n      }\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: IState): void {\n    this.element = this.createElement('slider__pins');\n\n    for (let i = 0; i < this.quantityPin; i += 1) {\n      this.pin[i] = this.createElement();\n      this.element.appendChild(this.pin[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className?: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    if (className) newElement.className = className;\n    return newElement;\n  }\n}\n","import { IState } from '../../types';\n\nexport default class ScaleView {\n  private element!: HTMLElement;\n\n  private quantityItem: number;\n\n  private item: HTMLElement[];\n\n  private quantity: HTMLElement[];\n\n  constructor(state: IState) {\n    this.quantityItem = 20;\n    this.item = [];\n    this.quantity = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const { min, max, step, view } = state;\n    const classNameList = 'slider__list_state_transformed';\n    const classNameQuantity = 'slider__quantity_state_transformed';\n\n    const stepCount: number = (max - min) / step;\n    const stepPercent: number = 100 / stepCount;\n    let scale = 1;\n    if (stepCount > this.quantityItem)\n      scale = Math.ceil(stepCount / this.quantityItem);\n    let percent = stepPercent * scale;\n\n    for (let i = 0; i <= this.quantityItem; i += 1) {\n      if (view) {\n        this.element.classList.add(classNameList);\n        this.quantity[i].classList.add(classNameQuantity);\n      } else {\n        this.element.classList.remove(classNameList);\n        this.quantity[i].classList.remove(classNameQuantity);\n      }\n\n      if (i === 0) {\n        this.item[i].style.left = '0%';\n        this.quantity[i].textContent = String(min);\n        continue;\n      }\n\n      if (i === 20) {\n        this.item[i].style.left = '100%';\n        this.quantity[i].textContent = String(max);\n        continue;\n      }\n\n      this.item[i].style.display = '';\n\n      if (percent > 99) {\n        this.item[i].style.display = 'none';\n        continue;\n      }\n\n      const value = Number(((percent / stepPercent) * step).toFixed()) + min;\n      this.quantity[i].textContent = String(value);\n      this.item[i].style.left = `${percent}%`;\n      percent += stepPercent * scale;\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: IState): void {\n    this.element = this.createElement('slider__list');\n\n    for (let i = 0; i <= this.quantityItem; i += 1) {\n      this.item[i] = this.createElement('slider__item');\n      this.item[i].textContent = '|';\n\n      this.quantity[i] = this.createElement('slider__quantity');\n      this.item[i].appendChild(this.quantity[i]);\n      this.element.appendChild(this.item[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    newElement.className = className;\n    return newElement;\n  }\n}\n","import Slider from './components/slider/Slider';\nimport Panel from './components/panel/Panel';\n\ndeclare global {\n  interface JQuery {\n    panel(slider: Slider): Panel;\n  }\n}\n\n$.fn.panel = function f(slider: Slider) {\n  return new Panel(this[0], slider);\n};\n","import Slider from '../slider/Slider';\nimport ConfiguringPanel from '../configuringPanel/ConfiguringPanel';\nimport { ModelType, ModelUpdate, PanelHandler, PanelTypes } from '../../types';\n\nexport default class Panel {\n  private configuringPanel!: ConfiguringPanel;\n\n  private main: HTMLElement;\n\n  private slider: Slider;\n\n  constructor(main: HTMLElement, slider: Slider) {\n    this.main = main;\n    this.slider = slider;\n    this.init();\n  }\n\n  public getElement(): HTMLElement {\n    return this.configuringPanel.getElement();\n  }\n\n  private init(): void {\n    this.configuringPanel = new ConfiguringPanel(this.slider.getState());\n\n    const main: HTMLElement | null =\n      this.main.querySelector('.slider__wrapper');\n    if (main) main.appendChild(this.getElement());\n\n    this.subscribe();\n  }\n\n  private subscribe(): void {\n    const cbPanel = (data: PanelTypes) => {\n      switch (data.type) {\n        case PanelHandler.HANDLE_INPUT_MIN_CHANGE:\n          this.slider.setState({ min: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_MAX_CHANGE:\n          this.slider.setState({ max: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_FROM_CHANGE:\n          this.slider.setState({ from: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_TO_CHANGE:\n          this.slider.setState({ to: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_STEP_CHANGE:\n          this.slider.setState({ step: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_VIEW_CHANGE:\n          this.slider.setState({ view: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_RANGE_CHANGE:\n          this.slider.setState({ range: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_FLAG_CHANGE:\n          this.slider.setState({ flag: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_PROGRESS_CHANGE:\n          this.slider.setState({ progress: data.value });\n          break;\n        case PanelHandler.HANDLE_INPUT_SCALE_CHANGE:\n          this.slider.setState({ scale: data.value });\n          break;\n        default:\n          throw new Error('there is no such event');\n      }\n    };\n    this.configuringPanel.subscribe(cbPanel);\n\n    const cbModel = (data: ModelType) => {\n      switch (data.type) {\n        case ModelUpdate.UPDATE_MODEL_STATE:\n          this.configuringPanel.updateElement(data.value);\n          break;\n        default:\n          throw new Error('no state');\n      }\n    };\n    this.slider.subscribe(cbModel);\n  }\n}\n","import Observer from '../observer/Observer';\nimport { IState, IData, PanelHandler, PanelTypes } from '../../types';\n\nexport default class ConfiguringPanel extends Observer<PanelTypes> {\n  private state: IState;\n\n  private data: IData[];\n\n  private element!: HTMLElement;\n\n  private label: HTMLElement[];\n\n  private input: HTMLInputElement[];\n\n  constructor(state: IState) {\n    super();\n    this.state = state;\n    this.data = [\n      {\n        label: 'Минимальное значение',\n        dataset: PanelHandler.HANDLE_INPUT_MIN_CHANGE,\n        type: 'number',\n      },\n      {\n        label: 'Максимальное значение',\n        dataset: PanelHandler.HANDLE_INPUT_MAX_CHANGE,\n        type: 'number',\n      },\n      {\n        label: 'От',\n        dataset: PanelHandler.HANDLE_INPUT_FROM_CHANGE,\n        type: 'number',\n      },\n      {\n        label: 'До',\n        dataset: PanelHandler.HANDLE_INPUT_TO_CHANGE,\n        type: 'number',\n      },\n      {\n        label: 'Шаг',\n        dataset: PanelHandler.HANDLE_INPUT_STEP_CHANGE,\n        type: 'number',\n      },\n      {\n        label: 'Вертикальный',\n        dataset: PanelHandler.HANDLE_INPUT_VIEW_CHANGE,\n        type: 'checkbox',\n      },\n      {\n        label: 'Интервал',\n        dataset: PanelHandler.HANDLE_INPUT_RANGE_CHANGE,\n        type: 'checkbox',\n      },\n      {\n        label: 'Значение',\n        dataset: PanelHandler.HANDLE_INPUT_FLAG_CHANGE,\n        type: 'checkbox',\n      },\n      {\n        label: 'Шкала',\n        dataset: PanelHandler.HANDLE_INPUT_SCALE_CHANGE,\n        type: 'checkbox',\n      },\n      {\n        label: 'Прогресс',\n        dataset: PanelHandler.HANDLE_INPUT_PROGRESS_CHANGE,\n        type: 'checkbox',\n      },\n    ];\n\n    this.label = [];\n    this.input = [];\n    this.createElements();\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    this.state = state;\n    const { range, from, to, min, max, step } = this.state;\n\n    this.data.forEach((elem, i) => {\n      if (this.input[i].dataset.name === PanelHandler.HANDLE_INPUT_MIN_CHANGE)\n        this.input[i].value = String(min);\n      if (this.input[i].dataset.name === PanelHandler.HANDLE_INPUT_MAX_CHANGE)\n        this.input[i].value = String(max);\n      if (this.input[i].dataset.name === PanelHandler.HANDLE_INPUT_STEP_CHANGE)\n        this.input[i].value = String(step);\n      if (\n        this.input[i].dataset.name === PanelHandler.HANDLE_INPUT_FROM_CHANGE\n      ) {\n        this.label[i].style.display = range ? '' : 'none';\n        this.input[i].value = String(from);\n      }\n\n      if (this.input[i].dataset.name === PanelHandler.HANDLE_INPUT_TO_CHANGE) {\n        this.label[i].textContent = range ? 'До' : 'Текущее значение';\n        this.input[i] = this.createElementInput(this.data[3]);\n        this.input[i].value = String(to);\n        this.input[i].addEventListener(\n          'change',\n          this.handleInputChange.bind(this)\n        );\n        this.label[i].appendChild(this.input[i]);\n      }\n    });\n\n    return this.element;\n  }\n\n  private createElements(): void {\n    this.element = this.createElement('div', 'slider__labels');\n\n    this.data.forEach((data, i) => {\n      this.label[i] = this.createElementLabel(data, i);\n      this.element.appendChild(this.label[i]);\n    });\n\n    this.updateElement(this.state);\n  }\n\n  private createElement(tag: string, className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement(tag);\n    newElement.className = className;\n    return newElement;\n  }\n\n  private createElementLabel(data: IData, index: number): HTMLElement {\n    const labelElement = this.createElement('label', 'slider__label');\n    labelElement.textContent = data.label;\n\n    const inputMin = data.dataset === PanelHandler.HANDLE_INPUT_MIN_CHANGE;\n    const inputMax = data.dataset === PanelHandler.HANDLE_INPUT_MAX_CHANGE;\n    const inputFrom = data.dataset === PanelHandler.HANDLE_INPUT_FROM_CHANGE;\n    const inputTo = data.dataset === PanelHandler.HANDLE_INPUT_TO_CHANGE;\n    const inputStep = data.dataset === PanelHandler.HANDLE_INPUT_STEP_CHANGE;\n    const generalInput =\n      inputMin || inputMax || inputFrom || inputTo || inputStep;\n\n    if (generalInput)\n      labelElement.classList.add('slider__label_state_displayed');\n\n    this.input[index] = this.createElementInput(data);\n    this.input[index].addEventListener(\n      'change',\n      this.handleInputChange.bind(this)\n    );\n    labelElement.appendChild(this.input[index]);\n\n    return labelElement;\n  }\n\n  private createElementInput(data: IData): HTMLInputElement {\n    const { range, view, flag, scale, progress } = this.state;\n    const inputElement = <HTMLInputElement>(\n      this.createElement('input', `slider__${data.dataset}`)\n    );\n    inputElement.dataset.name = data.dataset;\n    inputElement.type = data.type;\n\n    if (data.dataset === PanelHandler.HANDLE_INPUT_VIEW_CHANGE)\n      inputElement.checked = view;\n    if (data.dataset === PanelHandler.HANDLE_INPUT_RANGE_CHANGE)\n      inputElement.checked = range;\n    if (data.dataset === PanelHandler.HANDLE_INPUT_FLAG_CHANGE)\n      inputElement.checked = flag;\n    if (data.dataset === PanelHandler.HANDLE_INPUT_SCALE_CHANGE)\n      inputElement.checked = scale;\n    if (data.dataset === PanelHandler.HANDLE_INPUT_PROGRESS_CHANGE)\n      inputElement.checked = progress;\n\n    return inputElement;\n  }\n\n  private handleInputChange(evt: Event): void {\n    const input = <HTMLInputElement>evt.currentTarget;\n\n    switch (input.dataset.name) {\n      case PanelHandler.HANDLE_INPUT_MIN_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_MIN_CHANGE,\n          value: Number(input.value),\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_MAX_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_MAX_CHANGE,\n          value: Number(input.value),\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_FROM_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_FROM_CHANGE,\n          value: Number(input.value),\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_TO_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_TO_CHANGE,\n          value: Number(input.value),\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_STEP_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_STEP_CHANGE,\n          value: Number(input.value),\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_VIEW_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_VIEW_CHANGE,\n          value: input.checked,\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_RANGE_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_RANGE_CHANGE,\n          value: input.checked,\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_FLAG_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_FLAG_CHANGE,\n          value: input.checked,\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_PROGRESS_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_PROGRESS_CHANGE,\n          value: input.checked,\n        });\n        break;\n      case PanelHandler.HANDLE_INPUT_SCALE_CHANGE:\n        this.broadcast({\n          type: PanelHandler.HANDLE_INPUT_SCALE_CHANGE,\n          value: input.checked,\n        });\n        break;\n      default:\n        throw new Error('invalid type');\n    }\n  }\n}\n"],"sourceRoot":""}