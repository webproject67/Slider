{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/components/observer/Observer.ts","webpack:///./src/scripts/index.ts","webpack:///./src/scripts/slider-jquery.ts","webpack:///./src/scripts/Slider.ts","webpack:///./src/scripts/components/presenter/Presenter.ts","webpack:///./src/scripts/components/model/Model.ts","webpack:///./src/scripts/components/view/View.ts","webpack:///./src/scripts/components/view/TrackView.ts","webpack:///./src/scripts/components/view/ProgressView.ts","webpack:///./src/scripts/components/view/CircleView.ts","webpack:///./src/scripts/components/view/FlagView.ts","webpack:///./src/scripts/components/view/ScaleView.ts","webpack:///./src/scripts/panel-jquery.ts","webpack:///./src/scripts/Panel.ts","webpack:///./src/scripts/components/configuringPanel/ConfiguringPanel.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","observers","subscribe","fn","push","broadcast","keys","values","forEach","subscriber","$","slider","options","main","init","getState","presenter","model","setState","view","calculateValue","Number","setValue","state","updateView","start","min","max","from","fromPercent","to","toPercent","step","range","flag","progress","scale","Error","Boolean","validation","corner","val","stepPercent","stepPercentResult","Math","round","toFixed","boolFrom","mandatoryKeys","states","ranges","indexOf","numElement","generalValue","minBool","maxBool","toBool","fromBool","generalFrom","generalTo","abs","render","toggleClassNameSlider","track","updateElement","circle","getElement","appendChild","remove","createElement","addEventListener","handleItemClick","querySelectorAll","handleCircleMouseDown","handlePinMouseDown","item","wrapper","evt","pin","currentTarget","classNameBoolHMin","classList","contains","classNameBoolVMin","classNameBoolHMax","classNameBoolVMax","querySelector","replaceCircle","preventDefault","onMouseMove","boxLeft","offsetLeft","boxRight","clientWidth","sliderLeft","window","pageXOffset","sliderWidth","boxTop","offsetTop","sliderHeight","clientHeight","event","type","search","touches","circleMin","circleMax","circleVMin","circleVMax","pageY","pageX","onMouseUp","document","removeEventListener","stepList","offsetHeight","className","parseFloat","style","left","newElement","add","element","top","height","marginLeft","marginRight","quantityCircle","createElements","index","getCircleMax","getCircleVerticalMax","indexAndRangeBool","quantityPin","textContent","getPinMax","String","getPinVerticalMax","quantityItem","quantity","classNameList","classNameQuantity","stepCount","ceil","percent","display","panel","configuringPanel","data","label","dataset","readonly","input","createElementInput","createElementLabel","handleLabelChange","tag","labelElement","inputMin","inputMax","inputFrom","inputTo","inputStep","inputElement","readOnly","checked","inputView","inputRange","inputFlag","inputScale","inputProgress","generalInput"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { stateType } from '../../types';\n\nexport default class Observer {\n  private observers: Function[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  public subscribe(fn: Function) {\n    this.observers.push(fn);\n  }\n\n  public broadcast(keys: string[] | stateType, values?: (number | boolean)[]) {\n    this.observers.forEach((subscriber) => subscriber(keys, values));\n  }\n}\n","import './slider-jquery';\nimport './panel-jquery';\nimport '../styles/style.scss';\n","import Slider from './Slider';\n\n$.fn.slider = function f(options: object | undefined) {\n  return new Slider(this[0], options);\n};\n","import Presenter from './components/presenter/Presenter';\nimport { stateType } from './types';\n\nexport default class Slider {\n  presenter!: Presenter;\n\n  constructor(main: HTMLElement, options: object | undefined) {\n    this.init(main, options);\n  }\n\n  public getState(): stateType {\n    return this.presenter.model.getState();\n  }\n\n  public setState(options: object): void {\n    this.presenter.model.init(options);\n  }\n\n  private init(main: HTMLElement, options: object | undefined): Presenter {\n    this.presenter = new Presenter(main, options);\n    return this.presenter;\n  }\n}\n","import Model from '../model/Model';\nimport View from '../view/View';\nimport { stateType } from '../../types';\n\nexport default class Presenter {\n  public model: Model;\n\n  public view: View;\n\n  constructor(main: HTMLElement, options: object | undefined) {\n    this.model = new Model(options);\n    this.view = new View(main);\n    this.init();\n  }\n\n  private init() {\n    const cbView = (keys: string[], values: (number | boolean)[]) => {\n      keys.forEach((key, i) => {\n        const corner = key === 'corner';\n        const pinMax = key === 'toPercent';\n        const pinMin = key === 'fromPercent';\n        const generalConst = corner || pinMax || pinMin;\n\n        if (generalConst) {\n          this.model.calculateValue(Number(values[i]), keys[i]);\n        } else {\n          this.model.setValue(keys, values);\n        }\n      });\n    };\n    this.view.subscribe(cbView);\n\n    const cbModel = (state: stateType) => this.view.updateView(state);\n    this.model.subscribe(cbModel);\n\n    this.model.broadcast(this.model.getState());\n  }\n}\n","import Observer from '../observer/Observer';\nimport { stateType } from '../../types';\n\nexport default class Model extends Observer {\n  private state: stateType;\n\n  constructor(options: object | undefined) {\n    super();\n    this.state = {\n      start: 1,\n      min: 0,\n      max: 100,\n      from: 0,\n      fromPercent: 0,\n      to: 100,\n      toPercent: 100,\n      step: 1,\n      view: false,\n      range: false,\n      flag: true,\n      progress: true,\n      scale: true,\n    };\n    this.init(options);\n  }\n\n  public getState(): stateType {\n    return this.state;\n  }\n\n  public setValue(keys: string[], values: (number | boolean)[]) {\n    keys.forEach((key, i) => {\n      switch (key) {\n        case 'start':\n          this.state.start = Number(values[i]);\n          break;\n        case 'min':\n          if (!(typeof values[i] === 'number'))\n            throw new Error('invalid value');\n          this.state.min = Number(values[i]);\n          break;\n        case 'max':\n          if (!(typeof values[i] === 'number'))\n            throw new Error('invalid value');\n          this.state.max = Number(values[i]);\n          break;\n        case 'step':\n          if (!(typeof values[i] === 'number'))\n            throw new Error('invalid value');\n          this.state.step = Number(values[i]);\n          break;\n        case 'from':\n          if (!(typeof values[i] === 'number'))\n            throw new Error('invalid value');\n          this.state.from = Number(values[i]);\n          break;\n        case 'fromPercent':\n          this.state.fromPercent = Number(values[i]);\n          break;\n        case 'to':\n          if (!(typeof values[i] === 'number'))\n            throw new Error('invalid value');\n          this.state.to = Number(values[i]);\n          break;\n        case 'toPercent':\n          this.state.toPercent = Number(values[i]);\n          break;\n        case 'view':\n          if (!(typeof values[i] === 'boolean'))\n            throw new Error('invalid value');\n          this.state.view = Boolean(values[i]);\n          break;\n        case 'range':\n          if (!(typeof values[i] === 'boolean'))\n            throw new Error('invalid value');\n          this.state.range = Boolean(values[i]);\n          break;\n        case 'flag':\n          if (!(typeof values[i] === 'boolean'))\n            throw new Error('invalid value');\n          this.state.flag = Boolean(values[i]);\n          break;\n        case 'progress':\n          if (!(typeof values[i] === 'boolean'))\n            throw new Error('invalid value');\n          this.state.progress = Boolean(values[i]);\n          break;\n        case 'scale':\n          if (!(typeof values[i] === 'boolean'))\n            throw new Error('invalid value');\n          this.state.scale = Boolean(values[i]);\n          break;\n        default:\n          break;\n      }\n    });\n\n    this.validation();\n  }\n\n  public calculateValue(corner: number, val: string): void {\n    const { min, max, step, toPercent, fromPercent } = this.state;\n    const stepCount: number = (max - min) / step;\n    const stepPercent: number = 100 / stepCount;\n    let stepPercentResult: number =\n      Math.round(corner / stepPercent) * stepPercent;\n\n    if (stepPercentResult < 0) stepPercentResult = 0;\n\n    if (corner > 100 || stepPercentResult > 100) stepPercentResult = 100;\n\n    if (val === 'fromPercent' && stepPercentResult > toPercent)\n      stepPercentResult = toPercent;\n\n    if (val === 'toPercent' && fromPercent > stepPercentResult)\n      stepPercentResult = fromPercent;\n\n    const value =\n      Number(((stepPercentResult / stepPercent) * step).toFixed()) + min;\n    const boolFrom = stepPercentResult >= fromPercent;\n\n    if (val === 'toPercent') {\n      this.setValue(['toPercent', 'to'], [stepPercentResult, value]);\n      this.broadcast(this.state);\n      return;\n    }\n\n    if (val === 'fromPercent') {\n      this.setValue(['fromPercent', 'from'], [stepPercentResult, value]);\n      this.broadcast(this.state);\n      return;\n    }\n\n    if (boolFrom) {\n      this.setValue(['toPercent', 'to'], [stepPercentResult, value]);\n    } else {\n      this.setValue(['fromPercent', 'from'], [stepPercentResult, value]);\n    }\n\n    this.broadcast(this.state);\n  }\n\n  public init(options: object | undefined): void {\n    const mandatoryKeys = ['from', 'to'];\n    const states = [this.state.min, this.state.max];\n\n    if (typeof options === 'undefined') {\n      this.setValue(mandatoryKeys, states);\n      return;\n    }\n\n    const keys = Object.keys(options);\n    const values = Object.values(options);\n    const ranges = ['min', 'max'];\n\n    mandatoryKeys.forEach((key, i) => {\n      if (keys.indexOf(key) === -1) {\n        keys.push(key);\n        const numElement = keys.indexOf(ranges[i]);\n        if (numElement === -1) {\n          values.push(states[i]);\n        } else {\n          values.push(values[numElement]);\n        }\n      }\n    });\n\n    this.setValue(keys, values);\n  }\n\n  private validation(): void {\n    const { min, max, step, from, to } = this.state;\n    const generalValue = max - min;\n    const stepCount: number = generalValue / step;\n    const stepPercent: number = 100 / stepCount;\n    const keys = Object.keys(this.state);\n    const values = Object.values(this.state);\n\n    keys.forEach((key, i) => {\n      const minBool = values[i] < min;\n      const maxBool = values[i] > max;\n      const toBool = values[i] > to;\n      const fromBool = values[i] < from;\n      const generalFrom = minBool || maxBool || toBool;\n      const generalTo = minBool || maxBool || fromBool;\n\n      switch (key) {\n        case 'min':\n          if (values[i] >= max) this.state.min = max - 1;\n          break;\n        case 'max':\n          if (values[i] <= min) this.state.max = min + 1;\n          break;\n        case 'step':\n          if (values[i] === 0) this.state.step = 1;\n          if (values[i] < 0) this.state.step = Math.abs(values[i]);\n          if (values[i] > generalValue || step > generalValue)\n            this.state.step = generalValue;\n          break;\n        case 'from':\n          if (generalFrom) this.state.from = min;\n          this.state.fromPercent =\n            ((this.state.from - min) / step) * stepPercent;\n          break;\n        case 'to':\n          if (generalTo) this.state.to = max;\n          this.state.toPercent = ((this.state.to - min) / step) * stepPercent;\n          break;\n        default:\n          break;\n      }\n    });\n\n    this.broadcast(this.state);\n  }\n}\n","import Observer from '../observer/Observer';\nimport TrackView from './TrackView';\nimport ProgressView from './ProgressView';\nimport CircleView from './CircleView';\nimport FlagView from './FlagView';\nimport ScaleView from './ScaleView';\nimport { stateType } from '../../types';\n\nexport default class View extends Observer {\n  private main: HTMLElement;\n\n  private wrapper!: HTMLElement;\n\n  private slider!: HTMLElement;\n\n  private track!: TrackView;\n\n  private progress!: ProgressView;\n\n  private circle!: CircleView;\n\n  private flag!: FlagView;\n\n  private scale!: ScaleView;\n\n  constructor(main: HTMLElement) {\n    super();\n    this.main = main;\n  }\n\n  public updateView(state: stateType): void {\n    if (state.start) {\n      this.render(state);\n      return;\n    }\n\n    this.toggleClassNameSlider(state);\n    this.track.updateElement();\n    this.progress.updateElement();\n    this.circle.updateElement();\n    this.flag.updateElement();\n    this.scale.updateElement();\n\n    if (state.progress) {\n      this.track.getElement().appendChild(this.progress.getElement());\n    } else {\n      this.progress.getElement().remove();\n    }\n\n    if (state.flag) {\n      this.slider.appendChild(this.flag.getElement());\n    } else {\n      this.flag.getElement().remove();\n    }\n\n    if (state.scale) {\n      this.slider.appendChild(this.scale.getElement());\n    } else {\n      this.scale.getElement().remove();\n    }\n  }\n\n  private render(state: stateType): void {\n    this.slider = this.createElement('slider__inner');\n    this.toggleClassNameSlider(state);\n\n    this.track = new TrackView(state);\n    this.track\n      .getElement()\n      .addEventListener('mousedown', this.handleItemClick.bind(this));\n    this.slider.appendChild(this.track.getElement());\n\n    this.progress = new ProgressView(state);\n    if (state.progress)\n      this.track.getElement().appendChild(this.progress.getElement());\n\n    this.circle = new CircleView(state);\n    this.circle\n      .getElement()\n      .querySelectorAll('div')\n      .forEach((circle) => {\n        circle.addEventListener(\n          'mousedown',\n          this.handleCircleMouseDown.bind(this)\n        );\n        circle.addEventListener(\n          'touchstart',\n          this.handleCircleMouseDown.bind(this)\n        );\n      });\n    this.slider.appendChild(this.circle.getElement());\n\n    this.flag = new FlagView(state);\n    this.flag\n      .getElement()\n      .querySelectorAll('div')\n      .forEach((flag) => {\n        flag.addEventListener(\n          'mousedown',\n          this.handlePinMouseDown.bind(this, state)\n        );\n        flag.addEventListener(\n          'touchstart',\n          this.handlePinMouseDown.bind(this, state)\n        );\n      });\n    if (state.flag) this.slider.appendChild(this.flag.getElement());\n\n    this.scale = new ScaleView(state);\n    this.scale\n      .getElement()\n      .querySelectorAll('.slider__item')\n      .forEach((item) =>\n        item.addEventListener('mousedown', this.handleItemClick.bind(this))\n      );\n    if (state.scale) this.slider.appendChild(this.scale.getElement());\n\n    this.wrapper = this.createElement('slider__wrapper');\n    this.wrapper.appendChild(this.slider);\n    this.main.appendChild(this.wrapper);\n\n    this.broadcast(['start'], [0]);\n  }\n\n  private handlePinMouseDown(state: stateType, evt: Event): void {\n    const pin: HTMLElement = <HTMLElement>evt.currentTarget;\n\n    const classNameBoolHMin = pin.classList.contains(\n      'slider__pin_position_minimum'\n    );\n    const classNameBoolVMin = pin.classList.contains(\n      'slider__pin-vertical_position_minimum'\n    );\n    const classNameBoolHMax = pin.classList.contains(\n      'slider__pin_position_maximum'\n    );\n    const classNameBoolVMax = pin.classList.contains(\n      'slider__pin-vertical_position_maximum'\n    );\n\n    let circle: HTMLElement;\n\n    if (classNameBoolHMin || classNameBoolVMin)\n      circle = <HTMLElement>(\n        this.circle.getElement().querySelector('div:first-child')\n      );\n\n    if (classNameBoolHMax || classNameBoolVMax)\n      circle = state.range\n        ? <HTMLElement>this.circle.getElement().querySelector('div:last-child')\n        : <HTMLElement>(\n            this.circle.getElement().querySelector('div:first-child')\n          );\n\n    this.replaceCircle(evt, circle!);\n  }\n\n  private handleCircleMouseDown(evt: Event): void {\n    const circle: HTMLElement = <HTMLElement>evt.currentTarget;\n    this.replaceCircle(evt, circle);\n  }\n\n  private replaceCircle(evt: Event, circle: HTMLElement): void {\n    evt.preventDefault();\n\n    const onMouseMove = (\n      evt: Event & { touches?: TouchList; pageX?: number; pageY?: number }\n    ): void => {\n      const { slider } = this;\n      const boxLeft: number = slider.offsetLeft;\n      const boxRight: number = boxLeft + slider.clientWidth;\n      const sliderLeft: number = boxLeft + window.pageXOffset;\n      const sliderWidth: number = boxRight - boxLeft;\n      const boxTop: number = slider.offsetTop;\n      const boxBottom: number = boxTop + slider.clientHeight;\n      const sliderHeight: number = boxBottom - boxTop;\n      const getEvent = () =>\n        evt.type.search('touch') !== -1 ? evt.touches![0] : evt;\n      const event = getEvent();\n      const circleMin = circle.classList.contains(\n        'slider__circle_position_minimum'\n      );\n      const circleMax = circle.classList.contains(\n        'slider__circle_position_maximum'\n      );\n      const circleVMin = circle.classList.contains(\n        'slider__circle_position_vertical-minimum'\n      );\n      const circleVMax = circle.classList.contains(\n        'slider__circle_position_vertical-maximum'\n      );\n      let corner: number;\n\n      if (circleVMin || circleVMax) {\n        corner = ((event.pageY! - boxTop) / sliderHeight) * 100;\n      } else {\n        corner = ((event.pageX! - sliderLeft) / sliderWidth) * 100;\n      }\n\n      if (circleMin || circleVMin) this.broadcast(['fromPercent'], [corner]);\n      if (circleMax || circleVMax) this.broadcast(['toPercent'], [corner]);\n    };\n\n    const onMouseUp = () => {\n      document.removeEventListener('touchmove', onMouseMove);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('touchend', onMouseUp);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n\n    document.addEventListener('touchmove', onMouseMove);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('touchend', onMouseUp);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n\n  private handleItemClick(\n    evt: Event & { pageX?: number; pageY?: number }\n  ): void {\n    const scale: HTMLElement = <HTMLElement>evt.currentTarget;\n    const stepList: HTMLElement = this.scale.getElement();\n    const slider: HTMLElement = this.wrapper;\n    const boxLeft: number = slider.offsetLeft;\n    const boxRight: number = boxLeft + slider.clientWidth;\n    const boxTop: number = slider.offsetTop;\n    const sliderLeft: number = boxLeft + window.pageXOffset;\n    const sliderWidth: number = boxRight - boxLeft;\n    const sliderHeight: number = scale.offsetHeight;\n    const classNameBool = stepList.classList.contains(\n      'slider__list_state_transformed'\n    );\n    let corner: number;\n\n    if (classNameBool) {\n      corner = ((evt.pageY! - boxTop) / sliderHeight) * 100;\n    } else {\n      corner = ((evt.pageX! - sliderLeft) / sliderWidth) * 100;\n    }\n\n    if (scale.className === 'slider__item')\n      corner = parseFloat(scale.style.left);\n\n    this.broadcast(['corner'], [corner]);\n  }\n\n  private createElement(className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    newElement.className = className;\n    return newElement;\n  }\n\n  private toggleClassNameSlider(state: stateType): void {\n    const { view } = state;\n    const className = 'slider__inner_size_height';\n\n    if (view) {\n      this.slider.classList.add(className);\n    } else {\n      this.slider.classList.remove(className);\n    }\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class TrackView {\n  private state: stateType;\n\n  private element!: HTMLElement;\n\n  constructor(state: stateType) {\n    this.state = state;\n    this.createElement();\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(): HTMLElement {\n    const { view } = this.state;\n    const className = 'slider__track_size_height';\n\n    if (view) {\n      this.element.classList.add(className);\n    } else {\n      this.element.classList.remove(className);\n    }\n\n    return this.element;\n  }\n\n  private createElement(): void {\n    this.element = document.createElement('div');\n    this.element.className = 'slider__track';\n    this.updateElement();\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class ProgressView {\n  private state: stateType;\n\n  private element!: HTMLElement;\n\n  constructor(state: stateType) {\n    this.state = state;\n    this.createElement();\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(): HTMLElement {\n    const { view, fromPercent, toPercent } = this.state;\n    const className = 'slider__bar_size_width';\n\n    this.element.style.top = '';\n    this.element.style.height = '';\n    this.element.style.marginLeft = '';\n    this.element.style.marginRight = '';\n\n    if (view) {\n      this.element.classList.add(className);\n      this.element.style.top = `${fromPercent}%`;\n      this.element.style.height = `${toPercent - fromPercent}%`;\n    } else {\n      this.element.classList.remove(className);\n      this.element.style.marginLeft = `${fromPercent}%`;\n      this.element.style.marginRight = `${100 - toPercent}%`;\n    }\n\n    return this.element;\n  }\n\n  private createElement(): void {\n    this.element = document.createElement('div');\n    this.element.className = 'slider__bar';\n    this.updateElement();\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class CircleView {\n  private state: stateType;\n\n  private element!: HTMLElement;\n\n  private quantityCircle: number;\n\n  private circle: HTMLElement[];\n\n  constructor(state: stateType) {\n    this.state = state;\n    this.quantityCircle = 2;\n    this.circle = [];\n    this.createElements();\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(): HTMLElement {\n    const { range, view, fromPercent, toPercent } = this.state;\n\n    for (let index = 0; index < this.quantityCircle; index += 1) {\n      this.circle[index].className = '';\n      this.circle[index].style.left = '';\n      this.circle[index].style.top = '';\n\n      const getCircleMin = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_minimum';\n        this.circle[index].style.left = `${fromPercent}%`;\n      };\n\n      const getCircleMax = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_maximum';\n        this.circle[index].style.left = `${toPercent}%`;\n      };\n\n      const getCircleVerticalMin = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_vertical-minimum';\n        this.circle[index].style.top = `${fromPercent}%`;\n      };\n\n      const getCircleVerticalMax = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_vertical-maximum';\n        this.circle[index].style.top = `${toPercent}%`;\n      };\n\n      const indexAndRangeBool = !index && !range;\n\n      if (indexAndRangeBool && !view) getCircleMax();\n      if (indexAndRangeBool && view) getCircleVerticalMax();\n      if (range && !view) {\n        if (!index) {\n          getCircleMin();\n        } else {\n          getCircleMax();\n        }\n      }\n\n      if (range && view) {\n        if (!index) {\n          getCircleVerticalMin();\n        } else {\n          getCircleVerticalMax();\n        }\n      }\n    }\n\n    return this.element;\n  }\n\n  private createElements(): void {\n    this.element = this.createElement('slider__circles');\n\n    for (let i = 0; i < this.quantityCircle; i += 1) {\n      this.circle[i] = this.createElement();\n      this.element.appendChild(this.circle[i]);\n    }\n\n    this.updateElement();\n  }\n\n  private createElement(className?: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    if (className) newElement.className = className;\n    return newElement;\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class FlagView {\n  private state: stateType;\n\n  private element!: HTMLElement;\n\n  private quantityPin: number;\n\n  private pin: HTMLElement[];\n\n  constructor(state: stateType) {\n    this.state = state;\n    this.quantityPin = 2;\n    this.pin = [];\n    this.createElements();\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(): HTMLElement {\n    const { range, view, fromPercent, toPercent, from, to } = this.state;\n\n    for (let index = 0; index < this.quantityPin; index += 1) {\n      this.pin[index].className = '';\n      this.pin[index].textContent = '';\n      this.pin[index].style.left = '';\n      this.pin[index].style.top = '';\n\n      const getPinMin = () => {\n        this.pin[index].className = 'slider__pin slider__pin_position_minimum';\n        this.pin[index].textContent = String(from);\n        this.pin[index].style.left = `${fromPercent}%`;\n      };\n\n      const getPinMax = () => {\n        this.pin[index].className = 'slider__pin slider__pin_position_maximum';\n        this.pin[index].textContent = String(to);\n        this.pin[index].style.left = `${toPercent}%`;\n      };\n\n      const getPinVerticalMin = () => {\n        this.pin[index].className =\n          'slider__pin-vertical slider__pin-vertical_position_minimum';\n        this.pin[index].textContent = String(from);\n        this.pin[index].style.top = `${fromPercent}%`;\n      };\n\n      const getPinVerticalMax = () => {\n        this.pin[index].className =\n          'slider__pin-vertical slider__pin-vertical_position_maximum';\n        this.pin[index].textContent = String(to);\n        this.pin[index].style.top = `${toPercent}%`;\n      };\n\n      const indexAndRangeBool = !index && !range;\n\n      if (indexAndRangeBool && !view) getPinMax();\n      if (indexAndRangeBool && view) getPinVerticalMax();\n      if (range && !view) {\n        if (!index) {\n          getPinMin();\n        } else {\n          getPinMax();\n        }\n      }\n\n      if (range && view) {\n        if (!index) {\n          getPinVerticalMin();\n        } else {\n          getPinVerticalMax();\n        }\n      }\n    }\n\n    return this.element;\n  }\n\n  private createElements(): void {\n    this.element = this.createElement('slider__pins');\n\n    for (let i = 0; i < this.quantityPin; i += 1) {\n      this.pin[i] = this.createElement();\n      this.element.appendChild(this.pin[i]);\n    }\n\n    this.updateElement();\n  }\n\n  private createElement(className?: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    if (className) newElement.className = className;\n    return newElement;\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class ScaleView {\n  private state: stateType;\n\n  private element!: HTMLElement;\n\n  private quantityItem: number;\n\n  private item: HTMLElement[];\n\n  private quantity: HTMLElement[];\n\n  constructor(state: stateType) {\n    this.state = state;\n    this.quantityItem = 20;\n    this.item = [];\n    this.quantity = [];\n    this.createElements();\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(): HTMLElement {\n    const { min, max, step, view } = this.state;\n    const classNameList = 'slider__list_state_transformed';\n    const classNameQuantity = 'slider__quantity_state_transformed';\n\n    const stepCount: number = (max - min) / step;\n    const stepPercent: number = 100 / stepCount;\n    let scale = 1;\n    if (stepCount > this.quantityItem)\n      scale = Math.ceil(stepCount / this.quantityItem);\n    let percent = stepPercent * scale;\n\n    for (let i = 0; i <= this.quantityItem; i += 1) {\n      if (view) {\n        this.element.classList.add(classNameList);\n        this.quantity[i].classList.add(classNameQuantity);\n      } else {\n        this.element.classList.remove(classNameList);\n        this.quantity[i].classList.remove(classNameQuantity);\n      }\n\n      if (i === 0) {\n        this.item[i].style.left = '0%';\n        this.quantity[i].textContent = String(min);\n        continue;\n      }\n\n      if (i === 20) {\n        this.item[i].style.left = '100%';\n        this.quantity[i].textContent = String(max);\n        continue;\n      }\n\n      this.item[i].style.display = '';\n\n      if (percent > 99) {\n        this.item[i].style.display = 'none';\n        continue;\n      }\n\n      const value = Number(((percent / stepPercent) * step).toFixed()) + min;\n      this.quantity[i].textContent = String(value);\n      this.item[i].style.left = `${percent}%`;\n      percent += stepPercent * scale;\n    }\n\n    return this.element;\n  }\n\n  private createElements(): void {\n    this.element = this.createElement('slider__list');\n\n    for (let i = 0; i <= this.quantityItem; i += 1) {\n      this.item[i] = this.createElement('slider__item');\n      this.item[i].textContent = '|';\n\n      this.quantity[i] = this.createElement('slider__quantity');\n      this.item[i].appendChild(this.quantity[i]);\n      this.element.appendChild(this.item[i]);\n    }\n\n    this.updateElement();\n  }\n\n  private createElement(className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    newElement.className = className;\n    return newElement;\n  }\n}\n","import Slider from './Slider';\nimport Panel from './Panel';\n\n$.fn.panel = function f(slider: Slider) {\n  return new Panel(this[0], slider);\n};\n","import Slider from './Slider';\nimport ConfiguringPanel from './components/configuringPanel/ConfiguringPanel';\n\nexport default class Panel {\n  private configuringPanel!: ConfiguringPanel;\n\n  private main: HTMLElement;\n\n  private slider: Slider;\n\n  constructor(main: HTMLElement, slider: Slider) {\n    this.main = main;\n    this.slider = slider;\n    this.init();\n  }\n\n  private init(): void {\n    this.configuringPanel = new ConfiguringPanel(this.slider.getState());\n    this.main\n      .querySelector('.slider__wrapper')!\n      .appendChild(this.configuringPanel.getElement());\n\n    this.subscribe();\n  }\n\n  private subscribe(): void {\n    const cbPanel = (keys: string[], values: (number | boolean)[]) =>\n      this.slider.presenter.model.setValue(keys, values);\n    this.configuringPanel.subscribe(cbPanel);\n\n    const cbModel = () => this.configuringPanel.updateElement();\n    this.slider.presenter.model.subscribe(cbModel);\n  }\n}\n","import Observer from '../observer/Observer';\nimport { stateType, dataType } from '../../types';\n\nexport default class ConfiguringPanel extends Observer {\n  private state: stateType;\n\n  private data: dataType[];\n\n  private element!: HTMLElement;\n\n  private label: HTMLElement[];\n\n  private input: HTMLInputElement[];\n\n  constructor(state: stateType) {\n    super();\n    this.data = [\n      {\n        label: 'Минимальное значение',\n        dataset: 'min',\n        type: 'number',\n      },\n      {\n        label: 'Максимальное значение',\n        dataset: 'max',\n        type: 'number',\n      },\n      {\n        label: 'От',\n        dataset: 'from',\n        type: 'number',\n        readonly: true,\n      },\n      {\n        label: 'До',\n        dataset: 'to',\n        type: 'number',\n        readonly: true,\n      },\n      {\n        label: 'Шаг',\n        dataset: 'step',\n        type: 'number',\n      },\n      {\n        label: 'Вертикальный',\n        dataset: 'view',\n        type: 'checkbox',\n      },\n      {\n        label: 'Интервал',\n        dataset: 'range',\n        type: 'checkbox',\n      },\n      {\n        label: 'Значение',\n        dataset: 'flag',\n        type: 'checkbox',\n      },\n      {\n        label: 'Шкала',\n        dataset: 'scale',\n        type: 'checkbox',\n      },\n      {\n        label: 'Прогресс',\n        dataset: 'progress',\n        type: 'checkbox',\n      },\n    ];\n\n    this.state = state;\n    this.label = [];\n    this.input = [];\n    this.createElements();\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(): HTMLElement {\n    const { range, from, to, min, max, step } = this.state;\n\n    this.data.forEach((element, i) => {\n      if (this.input[i].dataset.name === 'min')\n        this.input[i].value = String(min);\n      if (this.input[i].dataset.name === 'max')\n        this.input[i].value = String(max);\n      if (this.input[i].dataset.name === 'step')\n        this.input[i].value = String(step);\n      if (this.input[i].dataset.name === 'from') {\n        this.label[i].style.display = range ? '' : 'none';\n        this.input[i].value = String(from);\n      }\n\n      if (this.input[i].dataset.name === 'to') {\n        this.label[i].textContent = range ? 'До' : 'Текущее значение';\n        this.input[i] = this.createElementInput(this.data[3]);\n        this.input[i].value = String(to);\n        this.label[i].appendChild(this.input[i]);\n      }\n    });\n\n    return this.element;\n  }\n\n  private createElements(): void {\n    this.element = this.createElement('div', 'slider__labels');\n\n    this.data.forEach((data, i) => {\n      this.label[i] = this.createElementLabel(data, i);\n      this.label[i].addEventListener(\n        'change',\n        this.handleLabelChange.bind(this)\n      );\n      this.element.appendChild(this.label[i]);\n    });\n\n    this.updateElement();\n  }\n\n  private createElement(tag: string, className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement(tag);\n    newElement.className = className;\n    return newElement;\n  }\n\n  private createElementLabel(data: dataType, index: number): HTMLElement {\n    const labelElement = this.createElement('label', 'slider__label');\n    labelElement.textContent = data.label;\n\n    const inputMin = data.dataset === 'min';\n    const inputMax = data.dataset === 'max';\n    const inputFrom = data.dataset === 'from';\n    const inputTo = data.dataset === 'to';\n    const inputStep = data.dataset === 'step';\n    const generalInput =\n      inputMin || inputMax || inputFrom || inputTo || inputStep;\n\n    if (generalInput)\n      labelElement.classList.add('slider__label_state_displayed');\n\n    this.input[index] = this.createElementInput(data);\n    labelElement.appendChild(this.input[index]);\n\n    return labelElement;\n  }\n\n  private createElementInput(data: dataType): HTMLInputElement {\n    const { range, view, flag, scale, progress } = this.state;\n    const inputElement = <HTMLInputElement>(\n      this.createElement('input', `slider__${data.dataset}`)\n    );\n    inputElement.dataset.name = data.dataset;\n    inputElement.type = data.type;\n\n    if (data.readonly) inputElement.readOnly = data.readonly;\n    if (data.dataset === 'view') inputElement.checked = view;\n    if (data.dataset === 'range') inputElement.checked = range;\n    if (data.dataset === 'flag') inputElement.checked = flag;\n    if (data.dataset === 'scale') inputElement.checked = scale;\n    if (data.dataset === 'progress') inputElement.checked = progress;\n\n    return inputElement;\n  }\n\n  private handleLabelChange(evt: Event): void {\n    const { min, max } = this.state;\n    const label: HTMLElement = <HTMLElement>evt.currentTarget;\n    const input = <HTMLInputElement>label.querySelector('input');\n    const inputMin = input.dataset.name === 'min';\n    const inputMax = input.dataset.name === 'max';\n    const inputStep = input.dataset.name === 'step';\n    const inputView = input.dataset.name === 'view';\n    const inputRange = input.dataset.name === 'range';\n    const inputFlag = input.dataset.name === 'flag';\n    const inputScale = input.dataset.name === 'scale';\n    const inputProgress = input.dataset.name === 'progress';\n    const generalInput = inputView || inputFlag || inputScale || inputProgress;\n    let value = Number(input.value);\n\n    if (inputMin) {\n      if (value >= max) {\n        this.broadcast(\n          ['min', 'from', 'fromPercent', 'to', 'toPercent', 'step'],\n          [max - 1, max - 1, 0, max, 100, 1]\n        );\n      } else {\n        this.broadcast(\n          ['min', 'from', 'fromPercent', 'to', 'toPercent'],\n          [value, value, 0, max, 100]\n        );\n      }\n    }\n\n    if (inputMax) {\n      if (min >= value) {\n        this.broadcast(\n          ['max', 'to', 'toPercent', 'from', 'fromPercent', 'step'],\n          [min + 1, min + 1, 100, min, 0, 1]\n        );\n      } else {\n        this.broadcast(\n          ['max', 'to', 'toPercent', 'from', 'fromPercent'],\n          [value, value, 100, min, 0]\n        );\n      }\n    }\n\n    if (inputStep) {\n      const generalValue = max - min;\n      if (value === 0) value = 1;\n      if (value < 0) value = Math.abs(value);\n      if (value > generalValue) value = generalValue;\n      this.broadcast(['step'], [value]);\n    }\n\n    if (inputRange)\n      this.broadcast(\n        ['from', 'fromPercent', input.dataset.name!],\n        [min, 0, input.checked]\n      );\n\n    if (generalInput) this.broadcast([input.dataset.name!], [input.checked]);\n  }\n}\n"],"sourceRoot":""}