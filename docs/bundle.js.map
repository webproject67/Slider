{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/components/observer/Observer.ts","webpack:///./src/scripts/index.ts","webpack:///./src/scripts/slider-jquery.ts","webpack:///./src/scripts/Slider.ts","webpack:///./src/scripts/components/presenter/Presenter.ts","webpack:///./src/scripts/components/model/Model.ts","webpack:///./src/scripts/components/view/View.ts","webpack:///./src/scripts/components/view/TrackView.ts","webpack:///./src/scripts/components/view/ProgressView.ts","webpack:///./src/scripts/components/view/CircleView.ts","webpack:///./src/scripts/components/view/FlagView.ts","webpack:///./src/scripts/components/view/ScaleView.ts","webpack:///./src/scripts/panel-jquery.ts","webpack:///./src/scripts/Panel.ts","webpack:///./src/scripts/components/configuringPanel/ConfiguringPanel.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","observers","subscribe","fn","push","broadcast","state","forEach","subscriber","$","slider","options","main","init","getState","presenter","setState","cb","extend","min","max","from","fromPercent","to","toPercent","step","view","range","flag","progress","scale","model","calculateValue","updateView","Error","Number","Boolean","validation","val","corner","stepPercent","stepPercentResult","Math","round","toFixed","boolFrom","generalValue","abs","fromMaxBool","fromMinBool","fromToBool","toMaxBool","toMinBool","toFromBool","start","render","toggleClassNameSlider","track","updateElement","circle","getElement","appendChild","remove","createElement","addEventListener","handleItemClick","querySelectorAll","handleCircleMouseDown","handlePinMouseDown","item","wrapper","evt","pin","currentTarget","classNameBoolHMin","classList","contains","classNameBoolVMin","classNameBoolHMax","classNameBoolVMax","querySelector","replaceCircle","preventDefault","onMouseMove","boxLeft","offsetLeft","boxRight","clientWidth","sliderLeft","window","pageXOffset","sliderWidth","boxTop","offsetTop","sliderHeight","clientHeight","event","TouchEvent","targetTouches","circleMin","circleMax","circleVMin","circleVMax","pageY","pageX","onMouseUp","document","removeEventListener","stepList","offsetHeight","className","parseFloat","style","left","newElement","add","element","top","height","marginLeft","marginRight","quantityCircle","createElements","index","getCircleMax","getCircleVerticalMax","indexAndRangeBool","quantityPin","textContent","getPinMax","String","getPinVerticalMax","quantityItem","quantity","classNameList","classNameQuantity","stepCount","ceil","percent","display","panel","configuringPanel","data","label","dataset","type","readonly","input","createElementInput","createElementLabel","handleLabelChange","tag","labelElement","inputMin","inputMax","inputFrom","inputTo","inputStep","inputElement","readOnly","checked","inputView","inputRange","inputFlag","inputScale","inputProgress","generalInput"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { stateType } from '../../types';\n\nexport default class Observer {\n  private observers: Function[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  public subscribe(fn: Function) {\n    this.observers.push(fn);\n  }\n\n  public broadcast(state: Partial<stateType>) {\n    this.observers.forEach((subscriber) => subscriber(state));\n  }\n}\n","import './slider-jquery';\nimport './panel-jquery';\nimport '../styles/style.scss';\n","import Slider from './Slider';\nimport { stateType } from './types';\n\n$.fn.slider = function f(options: stateType) {\n  return new Slider(this[0], options);\n};\n","import Presenter from './components/presenter/Presenter';\nimport { stateType } from './types';\n\nexport default class Slider {\n  private state!: stateType;\n\n  private presenter!: Presenter;\n\n  constructor(main: HTMLElement, options: stateType) {\n    this.init(main, options);\n  }\n\n  public getState(): stateType {\n    return this.presenter.getState();\n  }\n\n  public setState(state: stateType): void {\n    this.presenter.setState(state);\n  }\n\n  public subscribe(cb: (state: stateType) => HTMLElement) {\n    this.presenter.subscribe(cb);\n  }\n\n  private init(main: HTMLElement, options: stateType): Presenter {\n    this.state = $.extend(\n      {\n        min: 0,\n        max: 100,\n        from: 0,\n        fromPercent: 0,\n        to: 100,\n        toPercent: 100,\n        step: 1,\n        view: false,\n        range: false,\n        flag: true,\n        progress: true,\n        scale: true,\n      },\n      options\n    );\n\n    this.presenter = new Presenter(main, this.state);\n    return this.presenter;\n  }\n}\n","import Model from '../model/Model';\nimport View from '../view/View';\nimport { stateType } from '../../types';\n\nexport default class Presenter {\n  private model: Model;\n\n  private view: View;\n\n  constructor(main: HTMLElement, state: stateType) {\n    this.model = new Model(state);\n    this.view = new View(main);\n    this.init();\n  }\n\n  private init() {\n    const cbView = (state: stateType) => this.model.calculateValue(state);\n    this.view.subscribe(cbView);\n\n    const cbModel = (state: stateType) => this.view.updateView(state);\n    this.model.subscribe(cbModel);\n\n    this.model.broadcast(this.model.getState());\n  }\n\n  public getState(): stateType {\n    return this.model.getState();\n  }\n\n  public setState(state: stateType): void {\n    this.model.setState(state);\n  }\n\n  public subscribe(cb: (state: stateType) => HTMLElement) {\n    this.model.subscribe(cb);\n  }\n}\n","import Observer from '../observer/Observer';\nimport { stateType } from '../../types';\n\nexport default class Model extends Observer {\n  private state: stateType;\n\n  constructor(state: stateType) {\n    super();\n    this.state = state;\n    this.setState(state);\n  }\n\n  public getState(): stateType {\n    return { ...this.state };\n  }\n\n  public setState(state: Partial<stateType>) {\n    if (state.min) {\n      if (!(typeof state.min === 'number')) throw new Error('invalid value');\n      this.state.min = Number(state.min);\n    }\n\n    if (state.max) {\n      if (!(typeof state.max === 'number')) throw new Error('invalid value');\n      this.state.max = Number(state.max);\n    }\n\n    if (state.step) {\n      if (!(typeof state.step === 'number')) throw new Error('invalid value');\n      this.state.step = Number(state.step);\n    }\n\n    if (state.from) {\n      if (!(typeof state.from === 'number')) throw new Error('invalid value');\n      this.state.from = Number(state.from);\n    }\n\n    if (state.fromPercent) this.state.fromPercent = Number(state.fromPercent);\n\n    if (state.to) {\n      if (!(typeof state.to === 'number')) throw new Error('invalid value');\n      this.state.to = Number(state.to);\n    }\n\n    if (state.toPercent) this.state.toPercent = Number(state.toPercent);\n\n    if (!(typeof state.view === 'undefined')) {\n      if (!(typeof state.view === 'boolean')) throw new Error('invalid value');\n      this.state.view = Boolean(state.view);\n    }\n\n    if (!(typeof state.range === 'undefined')) {\n      if (!(typeof state.range === 'boolean')) throw new Error('invalid value');\n      this.state.range = Boolean(state.range);\n    }\n\n    if (!(typeof state.flag === 'undefined')) {\n      if (!(typeof state.flag === 'boolean')) throw new Error('invalid value');\n      this.state.flag = Boolean(state.flag);\n    }\n\n    if (!(typeof state.progress === 'undefined')) {\n      if (!(typeof state.progress === 'boolean'))\n        throw new Error('invalid value');\n      this.state.progress = Boolean(state.progress);\n    }\n\n    if (!(typeof state.scale === 'undefined')) {\n      if (!(typeof state.scale === 'boolean')) throw new Error('invalid value');\n      this.state.scale = Boolean(state.scale);\n    }\n\n    this.validation();\n  }\n\n  public calculateValue(state: stateType): void {\n    let val: string = '';\n    let corner: number = 0;\n\n    if (state.max) corner = state.max;\n    if (state.fromPercent) {\n      val = 'fromPercent';\n      corner = state.fromPercent;\n    }\n    if (state.toPercent) {\n      val = 'toPercent';\n      corner = state.toPercent;\n    }\n    const { min, max, step, toPercent, fromPercent } = this.state;\n    const stepCount: number = (max - min) / step;\n    const stepPercent: number = 100 / stepCount;\n    let stepPercentResult: number =\n      Math.round(corner / stepPercent) * stepPercent;\n\n    if (stepPercentResult < 0) stepPercentResult = 0;\n\n    if (corner > 100 || stepPercentResult > 100) stepPercentResult = 100;\n\n    if (val === 'fromPercent' && stepPercentResult > toPercent)\n      stepPercentResult = toPercent;\n\n    if (val === 'toPercent' && fromPercent > stepPercentResult)\n      stepPercentResult = fromPercent;\n\n    const value =\n      Number(((stepPercentResult / stepPercent) * step).toFixed()) + min;\n    const boolFrom = stepPercentResult >= fromPercent;\n\n    if (val === 'fromPercent' || !boolFrom) {\n      this.setState({ fromPercent: stepPercentResult, from: value });\n      this.broadcast(this.state);\n      return;\n    }\n\n    if (val === 'toPercent' || boolFrom) {\n      this.setState({ toPercent: stepPercentResult, to: value });\n      this.broadcast(this.state);\n    }\n  }\n\n  private validation(): void {\n    if (this.state.min >= this.state.max) {\n      this.state.min = this.state.max - 1;\n      this.state.from = this.state.max - 1;\n    }\n\n    const generalValue = this.state.max - this.state.min;\n\n    if (this.state.step === 0) this.state.step = 1;\n    if (this.state.step < 0) this.state.step = Math.abs(this.state.step);\n    if (this.state.step > generalValue || this.state.step > generalValue)\n      this.state.step = generalValue;\n\n    const stepCount: number = generalValue / this.state.step;\n    const stepPercent: number = 100 / stepCount;\n\n    const fromMaxBool = this.state.from > this.state.max;\n    const fromMinBool = this.state.from < this.state.min;\n    const fromToBool = this.state.from > this.state.to;\n    const generalFrom = fromMinBool || fromMaxBool || fromToBool;\n\n    if (generalFrom) this.state.from = this.state.min;\n    this.state.fromPercent =\n      ((this.state.from - this.state.min) / this.state.step) * stepPercent;\n\n    const toMaxBool = this.state.to > this.state.max;\n    const toMinBool = this.state.to < this.state.min;\n    const toFromBool = this.state.to < this.state.from;\n    const generalTo = toMinBool || toMaxBool || toFromBool;\n\n    if (generalTo) this.state.to = this.state.max;\n    this.state.toPercent =\n      ((this.state.to - this.state.min) / this.state.step) * stepPercent;\n\n    this.broadcast(this.state);\n  }\n}\n","import Observer from '../observer/Observer';\nimport TrackView from './TrackView';\nimport ProgressView from './ProgressView';\nimport CircleView from './CircleView';\nimport FlagView from './FlagView';\nimport ScaleView from './ScaleView';\nimport { stateType } from '../../types';\n\nexport default class View extends Observer {\n  private main: HTMLElement;\n\n  private start: boolean;\n\n  private wrapper!: HTMLElement;\n\n  private slider!: HTMLElement;\n\n  private track!: TrackView;\n\n  private progress!: ProgressView;\n\n  private circle!: CircleView;\n\n  private flag!: FlagView;\n\n  private scale!: ScaleView;\n\n  private state!: stateType;\n\n  constructor(main: HTMLElement) {\n    super();\n    this.main = main;\n    this.start = true;\n  }\n\n  public updateView(state: stateType): void {\n    this.state = state;\n\n    if (this.start) {\n      this.render(state);\n      return;\n    }\n\n    this.toggleClassNameSlider(state);\n    this.track.updateElement(state);\n    this.progress.updateElement(state);\n    this.circle.updateElement(state);\n    this.flag.updateElement(state);\n    this.scale.updateElement(state);\n\n    if (state.progress) {\n      this.track.getElement().appendChild(this.progress.getElement());\n    } else {\n      this.progress.getElement().remove();\n    }\n\n    if (state.flag) {\n      this.slider.appendChild(this.flag.getElement());\n    } else {\n      this.flag.getElement().remove();\n    }\n\n    if (state.scale) {\n      this.slider.appendChild(this.scale.getElement());\n    } else {\n      this.scale.getElement().remove();\n    }\n  }\n\n  private render(state: stateType): void {\n    this.slider = this.createElement('slider__inner');\n    this.toggleClassNameSlider(state);\n\n    this.track = new TrackView(state);\n    this.track\n      .getElement()\n      .addEventListener('mousedown', this.handleItemClick.bind(this));\n    this.slider.appendChild(this.track.getElement());\n\n    this.progress = new ProgressView(state);\n    if (state.progress)\n      this.track.getElement().appendChild(this.progress.getElement());\n\n    this.circle = new CircleView(state);\n    this.circle\n      .getElement()\n      .querySelectorAll('div')\n      .forEach((circle) => {\n        circle.addEventListener(\n          'mousedown',\n          this.handleCircleMouseDown.bind(this)\n        );\n        circle.addEventListener(\n          'touchstart',\n          this.handleCircleMouseDown.bind(this)\n        );\n      });\n    this.slider.appendChild(this.circle.getElement());\n\n    this.flag = new FlagView(state);\n    this.flag\n      .getElement()\n      .querySelectorAll('div')\n      .forEach((flag) => {\n        flag.addEventListener('mousedown', this.handlePinMouseDown.bind(this));\n        flag.addEventListener('touchstart', this.handlePinMouseDown.bind(this));\n      });\n    if (state.flag) this.slider.appendChild(this.flag.getElement());\n\n    this.scale = new ScaleView(state);\n    this.scale\n      .getElement()\n      .querySelectorAll('.slider__item')\n      .forEach((item) =>\n        item.addEventListener('mousedown', this.handleItemClick.bind(this))\n      );\n    if (state.scale) this.slider.appendChild(this.scale.getElement());\n\n    this.wrapper = this.createElement('slider__wrapper');\n    this.wrapper.appendChild(this.slider);\n    this.main.appendChild(this.wrapper);\n\n    this.start = false;\n  }\n\n  private handlePinMouseDown(evt: Event): void {\n    const pin: HTMLElement = <HTMLElement>evt.currentTarget;\n\n    const classNameBoolHMin = pin.classList.contains(\n      'slider__pin_position_minimum'\n    );\n    const classNameBoolVMin = pin.classList.contains(\n      'slider__pin-vertical_position_minimum'\n    );\n    const classNameBoolHMax = pin.classList.contains(\n      'slider__pin_position_maximum'\n    );\n    const classNameBoolVMax = pin.classList.contains(\n      'slider__pin-vertical_position_maximum'\n    );\n\n    let circle: HTMLElement;\n\n    if (classNameBoolHMin || classNameBoolVMin)\n      circle = this.circle.getElement().querySelector('div:first-child')!;\n\n    if (classNameBoolHMax || classNameBoolVMax)\n      circle = this.state.range\n        ? this.circle.getElement().querySelector('div:last-child')!\n        : this.circle.getElement().querySelector('div:first-child')!;\n\n    this.replaceCircle(evt, circle!);\n  }\n\n  private handleCircleMouseDown(evt: Event): void {\n    const circle: HTMLElement = <HTMLElement>evt.currentTarget;\n    this.replaceCircle(evt, circle);\n  }\n\n  private replaceCircle(evt: Event, circle: HTMLElement): void {\n    evt.preventDefault();\n\n    const onMouseMove = (evt: MouseEvent | TouchEvent): void => {\n      const { slider } = this;\n      const boxLeft: number = slider.offsetLeft;\n      const boxRight: number = boxLeft + slider.clientWidth;\n      const sliderLeft: number = boxLeft + window.pageXOffset;\n      const sliderWidth: number = boxRight - boxLeft;\n      const boxTop: number = slider.offsetTop;\n      const boxBottom: number = boxTop + slider.clientHeight;\n      const sliderHeight: number = boxBottom - boxTop;\n      const getEvent = () =>\n        evt instanceof TouchEvent ? evt.targetTouches[0] : evt;\n      const event = getEvent();\n      const circleMin = circle.classList.contains(\n        'slider__circle_position_minimum'\n      );\n      const circleMax = circle.classList.contains(\n        'slider__circle_position_maximum'\n      );\n      const circleVMin = circle.classList.contains(\n        'slider__circle_position_vertical-minimum'\n      );\n      const circleVMax = circle.classList.contains(\n        'slider__circle_position_vertical-maximum'\n      );\n      let corner: number;\n\n      if (circleVMin || circleVMax) {\n        corner = ((event.pageY! - boxTop) / sliderHeight) * 100;\n      } else {\n        corner = ((event.pageX! - sliderLeft) / sliderWidth) * 100;\n      }\n\n      if (circleMin || circleVMin) this.broadcast({ fromPercent: corner });\n      if (circleMax || circleVMax) this.broadcast({ toPercent: corner });\n    };\n\n    const onMouseUp = () => {\n      document.removeEventListener('touchmove', onMouseMove);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('touchend', onMouseUp);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n\n    document.addEventListener('touchmove', onMouseMove);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('touchend', onMouseUp);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n\n  private handleItemClick(\n    evt: Event & { pageX?: number; pageY?: number }\n  ): void {\n    const scale: HTMLElement = <HTMLElement>evt.currentTarget;\n    const stepList: HTMLElement = this.scale.getElement();\n    const slider: HTMLElement = this.wrapper;\n    const boxLeft: number = slider.offsetLeft;\n    const boxRight: number = boxLeft + slider.clientWidth;\n    const boxTop: number = slider.offsetTop;\n    const sliderLeft: number = boxLeft + window.pageXOffset;\n    const sliderWidth: number = boxRight - boxLeft;\n    const sliderHeight: number = scale.offsetHeight;\n    const classNameBool = stepList.classList.contains(\n      'slider__list_state_transformed'\n    );\n    let corner: number;\n\n    if (classNameBool) {\n      corner = ((evt.pageY! - boxTop) / sliderHeight) * 100;\n    } else {\n      corner = ((evt.pageX! - sliderLeft) / sliderWidth) * 100;\n    }\n\n    if (scale.className === 'slider__item')\n      corner = parseFloat(scale.style.left);\n\n    this.broadcast({ max: corner });\n  }\n\n  private createElement(className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    newElement.className = className;\n    return newElement;\n  }\n\n  private toggleClassNameSlider(state: stateType): void {\n    const { view } = state;\n    const className = 'slider__inner_size_height';\n\n    if (view) {\n      this.slider.classList.add(className);\n    } else {\n      this.slider.classList.remove(className);\n    }\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class TrackView {\n  private element!: HTMLElement;\n\n  constructor(state: stateType) {\n    this.createElement(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: stateType): HTMLElement {\n    const { view } = state;\n    const className = 'slider__track_size_height';\n\n    if (view) {\n      this.element.classList.add(className);\n    } else {\n      this.element.classList.remove(className);\n    }\n\n    return this.element;\n  }\n\n  private createElement(state: stateType): void {\n    this.element = document.createElement('div');\n    this.element.className = 'slider__track';\n    this.updateElement(state);\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class ProgressView {\n  private element!: HTMLElement;\n\n  constructor(state: stateType) {\n    this.createElement(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: stateType): HTMLElement {\n    const { view, fromPercent, toPercent } = state;\n    const className = 'slider__bar_size_width';\n\n    this.element.style.top = '';\n    this.element.style.height = '';\n    this.element.style.marginLeft = '';\n    this.element.style.marginRight = '';\n\n    if (view) {\n      this.element.classList.add(className);\n      this.element.style.top = `${fromPercent}%`;\n      this.element.style.height = `${toPercent - fromPercent}%`;\n    } else {\n      this.element.classList.remove(className);\n      this.element.style.marginLeft = `${fromPercent}%`;\n      this.element.style.marginRight = `${100 - toPercent}%`;\n    }\n\n    return this.element;\n  }\n\n  private createElement(state: stateType): void {\n    this.element = document.createElement('div');\n    this.element.className = 'slider__bar';\n    this.updateElement(state);\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class CircleView {\n  private element!: HTMLElement;\n\n  private quantityCircle: number;\n\n  private circle: HTMLElement[];\n\n  constructor(state: stateType) {\n    this.quantityCircle = 2;\n    this.circle = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: stateType): HTMLElement {\n    const { range, view, fromPercent, toPercent } = state;\n\n    for (let index = 0; index < this.quantityCircle; index += 1) {\n      this.circle[index].className = '';\n      this.circle[index].style.left = '';\n      this.circle[index].style.top = '';\n\n      const getCircleMin = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_minimum';\n        this.circle[index].style.left = `${fromPercent}%`;\n      };\n\n      const getCircleMax = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_maximum';\n        this.circle[index].style.left = `${toPercent}%`;\n      };\n\n      const getCircleVerticalMin = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_vertical-minimum';\n        this.circle[index].style.top = `${fromPercent}%`;\n      };\n\n      const getCircleVerticalMax = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_vertical-maximum';\n        this.circle[index].style.top = `${toPercent}%`;\n      };\n\n      const indexAndRangeBool = !index && !range;\n\n      if (indexAndRangeBool && !view) getCircleMax();\n      if (indexAndRangeBool && view) getCircleVerticalMax();\n      if (range && !view) {\n        if (!index) {\n          getCircleMin();\n        } else {\n          getCircleMax();\n        }\n      }\n\n      if (range && view) {\n        if (!index) {\n          getCircleVerticalMin();\n        } else {\n          getCircleVerticalMax();\n        }\n      }\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: stateType): void {\n    this.element = this.createElement('slider__circles');\n\n    for (let i = 0; i < this.quantityCircle; i += 1) {\n      this.circle[i] = this.createElement();\n      this.element.appendChild(this.circle[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className?: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    if (className) newElement.className = className;\n    return newElement;\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class FlagView {\n  private element!: HTMLElement;\n\n  private quantityPin: number;\n\n  private pin: HTMLElement[];\n\n  constructor(state: stateType) {\n    this.quantityPin = 2;\n    this.pin = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: stateType): HTMLElement {\n    const { range, view, fromPercent, toPercent, from, to } = state;\n\n    for (let index = 0; index < this.quantityPin; index += 1) {\n      this.pin[index].className = '';\n      this.pin[index].textContent = '';\n      this.pin[index].style.left = '';\n      this.pin[index].style.top = '';\n\n      const getPinMin = () => {\n        this.pin[index].className = 'slider__pin slider__pin_position_minimum';\n        this.pin[index].textContent = String(from);\n        this.pin[index].style.left = `${fromPercent}%`;\n      };\n\n      const getPinMax = () => {\n        this.pin[index].className = 'slider__pin slider__pin_position_maximum';\n        this.pin[index].textContent = String(to);\n        this.pin[index].style.left = `${toPercent}%`;\n      };\n\n      const getPinVerticalMin = () => {\n        this.pin[index].className =\n          'slider__pin-vertical slider__pin-vertical_position_minimum';\n        this.pin[index].textContent = String(from);\n        this.pin[index].style.top = `${fromPercent}%`;\n      };\n\n      const getPinVerticalMax = () => {\n        this.pin[index].className =\n          'slider__pin-vertical slider__pin-vertical_position_maximum';\n        this.pin[index].textContent = String(to);\n        this.pin[index].style.top = `${toPercent}%`;\n      };\n\n      const indexAndRangeBool = !index && !range;\n\n      if (indexAndRangeBool && !view) getPinMax();\n      if (indexAndRangeBool && view) getPinVerticalMax();\n      if (range && !view) {\n        if (!index) {\n          getPinMin();\n        } else {\n          getPinMax();\n        }\n      }\n\n      if (range && view) {\n        if (!index) {\n          getPinVerticalMin();\n        } else {\n          getPinVerticalMax();\n        }\n      }\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: stateType): void {\n    this.element = this.createElement('slider__pins');\n\n    for (let i = 0; i < this.quantityPin; i += 1) {\n      this.pin[i] = this.createElement();\n      this.element.appendChild(this.pin[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className?: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    if (className) newElement.className = className;\n    return newElement;\n  }\n}\n","import { stateType } from '../../types';\n\nexport default class ScaleView {\n  private element!: HTMLElement;\n\n  private quantityItem: number;\n\n  private item: HTMLElement[];\n\n  private quantity: HTMLElement[];\n\n  constructor(state: stateType) {\n    this.quantityItem = 20;\n    this.item = [];\n    this.quantity = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: stateType): HTMLElement {\n    const { min, max, step, view } = state;\n    const classNameList = 'slider__list_state_transformed';\n    const classNameQuantity = 'slider__quantity_state_transformed';\n\n    const stepCount: number = (max - min) / step;\n    const stepPercent: number = 100 / stepCount;\n    let scale = 1;\n    if (stepCount > this.quantityItem)\n      scale = Math.ceil(stepCount / this.quantityItem);\n    let percent = stepPercent * scale;\n\n    for (let i = 0; i <= this.quantityItem; i += 1) {\n      if (view) {\n        this.element.classList.add(classNameList);\n        this.quantity[i].classList.add(classNameQuantity);\n      } else {\n        this.element.classList.remove(classNameList);\n        this.quantity[i].classList.remove(classNameQuantity);\n      }\n\n      if (i === 0) {\n        this.item[i].style.left = '0%';\n        this.quantity[i].textContent = String(min);\n        continue;\n      }\n\n      if (i === 20) {\n        this.item[i].style.left = '100%';\n        this.quantity[i].textContent = String(max);\n        continue;\n      }\n\n      this.item[i].style.display = '';\n\n      if (percent > 99) {\n        this.item[i].style.display = 'none';\n        continue;\n      }\n\n      const value = Number(((percent / stepPercent) * step).toFixed()) + min;\n      this.quantity[i].textContent = String(value);\n      this.item[i].style.left = `${percent}%`;\n      percent += stepPercent * scale;\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: stateType): void {\n    this.element = this.createElement('slider__list');\n\n    for (let i = 0; i <= this.quantityItem; i += 1) {\n      this.item[i] = this.createElement('slider__item');\n      this.item[i].textContent = '|';\n\n      this.quantity[i] = this.createElement('slider__quantity');\n      this.item[i].appendChild(this.quantity[i]);\n      this.element.appendChild(this.item[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    newElement.className = className;\n    return newElement;\n  }\n}\n","import Slider from './Slider';\nimport Panel from './Panel';\n\n$.fn.panel = function f(slider: Slider) {\n  return new Panel(this[0], slider);\n};\n","import Slider from './Slider';\nimport ConfiguringPanel from './components/configuringPanel/ConfiguringPanel';\nimport { stateType } from './types';\n\nexport default class Panel {\n  private configuringPanel!: ConfiguringPanel;\n\n  private main: HTMLElement;\n\n  private slider: Slider;\n\n  constructor(main: HTMLElement, slider: Slider) {\n    this.main = main;\n    this.slider = slider;\n    this.init();\n  }\n\n  private init(): void {\n    this.configuringPanel = new ConfiguringPanel(this.slider.getState());\n    this.main\n      .querySelector('.slider__wrapper')!\n      .appendChild(this.configuringPanel.getElement());\n\n    this.subscribe();\n  }\n\n  private subscribe(): void {\n    const cbPanel = (state: stateType) => this.slider.setState(state);\n    this.configuringPanel.subscribe(cbPanel);\n\n    const cbModel = (state: stateType) =>\n      this.configuringPanel.updateElement(state);\n    this.slider.subscribe(cbModel);\n  }\n}\n","import Observer from '../observer/Observer';\nimport { stateType, dataType } from '../../types';\n\nexport default class ConfiguringPanel extends Observer {\n  private data: dataType[];\n\n  private element!: HTMLElement;\n\n  private label: HTMLElement[];\n\n  private input: HTMLInputElement[];\n\n  constructor(state: stateType) {\n    super();\n    this.data = [\n      {\n        label: 'Минимальное значение',\n        dataset: 'min',\n        type: 'number',\n      },\n      {\n        label: 'Максимальное значение',\n        dataset: 'max',\n        type: 'number',\n      },\n      {\n        label: 'От',\n        dataset: 'from',\n        type: 'number',\n        readonly: true,\n      },\n      {\n        label: 'До',\n        dataset: 'to',\n        type: 'number',\n        readonly: true,\n      },\n      {\n        label: 'Шаг',\n        dataset: 'step',\n        type: 'number',\n      },\n      {\n        label: 'Вертикальный',\n        dataset: 'view',\n        type: 'checkbox',\n      },\n      {\n        label: 'Интервал',\n        dataset: 'range',\n        type: 'checkbox',\n      },\n      {\n        label: 'Значение',\n        dataset: 'flag',\n        type: 'checkbox',\n      },\n      {\n        label: 'Шкала',\n        dataset: 'scale',\n        type: 'checkbox',\n      },\n      {\n        label: 'Прогресс',\n        dataset: 'progress',\n        type: 'checkbox',\n      },\n    ];\n\n    this.label = [];\n    this.input = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: stateType): HTMLElement {\n    const { range, from, to, min, max, step } = state;\n\n    this.data.forEach((element, i) => {\n      if (this.input[i].dataset.name === 'min')\n        this.input[i].value = String(min);\n      if (this.input[i].dataset.name === 'max')\n        this.input[i].value = String(max);\n      if (this.input[i].dataset.name === 'step')\n        this.input[i].value = String(step);\n      if (this.input[i].dataset.name === 'from') {\n        this.label[i].style.display = range ? '' : 'none';\n        this.input[i].value = String(from);\n      }\n\n      if (this.input[i].dataset.name === 'to') {\n        this.label[i].textContent = range ? 'До' : 'Текущее значение';\n        this.input[i] = this.createElementInput(this.data[3], state);\n        this.input[i].value = String(to);\n        this.label[i].appendChild(this.input[i]);\n      }\n    });\n\n    return this.element;\n  }\n\n  private createElements(state: stateType): void {\n    this.element = this.createElement('div', 'slider__labels');\n\n    this.data.forEach((data, i) => {\n      this.label[i] = this.createElementLabel(data, i, state);\n      this.label[i].addEventListener(\n        'change',\n        this.handleLabelChange.bind(this, state)\n      );\n      this.element.appendChild(this.label[i]);\n    });\n\n    this.updateElement(state);\n  }\n\n  private createElement(tag: string, className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement(tag);\n    newElement.className = className;\n    return newElement;\n  }\n\n  private createElementLabel(\n    data: dataType,\n    index: number,\n    state: stateType\n  ): HTMLElement {\n    const labelElement = this.createElement('label', 'slider__label');\n    labelElement.textContent = data.label;\n\n    const inputMin = data.dataset === 'min';\n    const inputMax = data.dataset === 'max';\n    const inputFrom = data.dataset === 'from';\n    const inputTo = data.dataset === 'to';\n    const inputStep = data.dataset === 'step';\n    const generalInput =\n      inputMin || inputMax || inputFrom || inputTo || inputStep;\n\n    if (generalInput)\n      labelElement.classList.add('slider__label_state_displayed');\n\n    this.input[index] = this.createElementInput(data, state);\n    labelElement.appendChild(this.input[index]);\n\n    return labelElement;\n  }\n\n  private createElementInput(\n    data: dataType,\n    state: stateType\n  ): HTMLInputElement {\n    const { range, view, flag, scale, progress } = state;\n    const inputElement = <HTMLInputElement>(\n      this.createElement('input', `slider__${data.dataset}`)\n    );\n    inputElement.dataset.name = data.dataset;\n    inputElement.type = data.type;\n\n    if (data.readonly) inputElement.readOnly = data.readonly;\n    if (data.dataset === 'view') inputElement.checked = view;\n    if (data.dataset === 'range') inputElement.checked = range;\n    if (data.dataset === 'flag') inputElement.checked = flag;\n    if (data.dataset === 'scale') inputElement.checked = scale;\n    if (data.dataset === 'progress') inputElement.checked = progress;\n\n    return inputElement;\n  }\n\n  private handleLabelChange(state: stateType, evt: Event): void {\n    const label: HTMLElement = <HTMLElement>evt.currentTarget;\n    const input = <HTMLInputElement>label.querySelector('input');\n    const inputMin = input.dataset.name === 'min';\n    const inputMax = input.dataset.name === 'max';\n    const inputStep = input.dataset.name === 'step';\n    const inputView = input.dataset.name === 'view';\n    const inputRange = input.dataset.name === 'range';\n    const inputFlag = input.dataset.name === 'flag';\n    const inputScale = input.dataset.name === 'scale';\n    const inputProgress = input.dataset.name === 'progress';\n    const generalInput = inputView || inputFlag || inputScale || inputProgress;\n    const value = Number(input.value);\n\n    if (inputMin) this.broadcast({ min: value, from: value, fromPercent: 0 });\n\n    if (inputMax) this.broadcast({ max: value, to: value, toPercent: 100 });\n\n    if (inputStep) this.broadcast({ step: value });\n\n    if (inputRange)\n      this.broadcast({\n        [`${input.dataset.name!}`]: input.checked,\n        from: state.min,\n        fromPercent: 0,\n      });\n\n    if (generalInput)\n      this.broadcast({ [`${input.dataset.name!}`]: input.checked });\n  }\n}\n"],"sourceRoot":""}