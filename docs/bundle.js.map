{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/types.ts","webpack:///./src/scripts/components/observer/Observer.ts","webpack:///./src/scripts/index.ts","webpack:///./src/scripts/slider-jquery.ts","webpack:///./src/scripts/Slider.ts","webpack:///./src/scripts/components/presenter/Presenter.ts","webpack:///./src/scripts/components/model/Model.ts","webpack:///./src/scripts/components/view/View.ts","webpack:///./src/scripts/components/view/TrackView.ts","webpack:///./src/scripts/components/view/ProgressView.ts","webpack:///./src/scripts/components/view/CircleView.ts","webpack:///./src/scripts/components/view/FlagView.ts","webpack:///./src/scripts/components/view/ScaleView.ts","webpack:///./src/scripts/panel-jquery.ts","webpack:///./src/scripts/Panel.ts","webpack:///./src/scripts/components/configuringPanel/ConfiguringPanel.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelUpdate","ViewHandler","PanelHandler","this","observers","subscribe","fn","push","broadcast","data","forEach","subscriber","$","slider","options","main","init","getState","presenter","setState","state","updateState","cb","extend","min","max","from","fromPercent","to","toPercent","step","view","range","flag","progress","scale","model","type","FROMCIRCLE","setStateFrom","TOCIRCLE","setStateTo","TRACK","SCALE","setStateFromOrTo","Error","UPDATE","updateView","valuePercent","cloneValuePercent","calculateValue","Number","Boolean","validation","stepPercent","stepPercentResult","Math","round","toFixed","generalValue","abs","fromMaxBool","fromMinBool","fromToBool","toMaxBool","toMinBool","toFromBool","start","render","toggleClassNameSlider","track","updateElement","circle","getElement","appendChild","remove","createElement","addEventListener","handleTrackClick","querySelectorAll","handleCircleMouseDown","handlePinMouseDown","item","handleScaleClick","wrapper","evt","pin","currentTarget","classNameBoolHMax","classList","contains","classNameBoolVMax","querySelector","replaceCircle","preventDefault","onMouseMove","event","TouchEvent","targetTouches","circleMin","circleMax","circleVMin","circleVMax","corner","pageX","offsetLeft","clientWidth","pageY","offsetTop","clientHeight","onMouseUp","document","removeEventListener","offsetX","offsetY","parseFloat","style","left","className","newElement","add","element","top","height","marginLeft","marginRight","quantityCircle","createElements","index","getCircleMax","getCircleVerticalMax","indexAndRangeBool","quantityPin","textContent","getPinMax","String","getPinVerticalMax","quantityItem","quantity","classNameList","classNameQuantity","stepCount","ceil","percent","display","panel","configuringPanel","MIN","MAX","STEP","VIEW","RANGE","FLAG","PROGRESS","label","dataset","readonly","input","elem","createElementInput","createElementLabel","tag","labelElement","inputMin","inputMax","inputFrom","inputTo","inputStep","handleInputChange","inputElement","readOnly","checked"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","interface IState {\n  min: number;\n  max: number;\n  from: number;\n  fromPercent: number;\n  to: number;\n  toPercent: number;\n  step: number;\n  view: boolean;\n  range: boolean;\n  flag: boolean;\n  scale: boolean;\n  progress: boolean;\n}\n\ninterface IData {\n  label: string;\n  dataset: string;\n  type: string;\n  readonly?: boolean;\n}\n\nenum ModelUpdate {\n  UPDATE = 'update',\n}\n\ntype ModelType = {\n  type: ModelUpdate.UPDATE;\n  value: IState;\n};\n\nenum ViewHandler {\n  FROMCIRCLE = 'fromCircle',\n  TOCIRCLE = 'toCircle',\n  TRACK = 'track',\n  SCALE = 'scale',\n}\n\ntype FromCircle = {\n  type: ViewHandler.FROMCIRCLE;\n  value: number;\n};\n\ntype ToCircle = {\n  type: ViewHandler.TOCIRCLE;\n  value: number;\n};\n\ntype Track = {\n  type: ViewHandler.TRACK;\n  value: number;\n};\n\ntype Circle = {\n  type: ViewHandler.SCALE;\n  value: number;\n};\n\ntype ViewTypes = FromCircle | ToCircle | Track | Circle;\n\nenum PanelHandler {\n  MIN = 'min',\n  MAX = 'max',\n  STEP = 'step',\n  VIEW = 'view',\n  RANGE = 'range',\n  FLAG = 'flag',\n  SCALE = 'scale',\n  PROGRESS = 'progress',\n}\n\ntype Min = {\n  type: PanelHandler.MIN;\n  value: number;\n};\n\ntype Max = {\n  type: PanelHandler.MAX;\n  value: number;\n};\n\ntype Step = {\n  type: PanelHandler.STEP;\n  value: number;\n};\n\ntype View = {\n  type: PanelHandler.VIEW;\n  value: boolean;\n};\n\ntype Range = {\n  type: PanelHandler.RANGE;\n  value: boolean;\n};\n\ntype Flag = {\n  type: PanelHandler.FLAG;\n  value: boolean;\n};\n\ntype Progress = {\n  type: PanelHandler.PROGRESS;\n  value: boolean;\n};\n\ntype Scale = {\n  type: PanelHandler.SCALE;\n  value: boolean;\n};\n\ntype PanelTypes = Min | Max | Step | View | Range | Flag | Progress | Scale;\n\nexport {\n  IState,\n  IData,\n  ModelUpdate,\n  ModelType,\n  ViewHandler,\n  ViewTypes,\n  PanelHandler,\n  PanelTypes,\n};\n","export default class Observer<T> {\n  private observers: ((data: T) => void)[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  public subscribe(fn: (data: T) => void): void {\n    this.observers.push(fn);\n  }\n\n  public broadcast(data: T): void {\n    this.observers.forEach((subscriber) => subscriber(data));\n  }\n}\n","import './slider-jquery';\nimport './panel-jquery';\nimport '../styles/style.scss';\n","import Slider from './Slider';\nimport { IState } from './types';\n\n$.fn.slider = function f(options: IState) {\n  return new Slider(this[0], options);\n};\n","import Presenter from './components/presenter/Presenter';\nimport { IState, ModelType, PanelTypes } from './types';\n\nexport default class Slider {\n  private state!: IState;\n\n  private presenter!: Presenter;\n\n  constructor(main: HTMLElement, options: IState) {\n    this.init(main, options);\n  }\n\n  public getState(): IState {\n    return this.presenter.getState().value;\n  }\n\n  public setState(state: IState): void {\n    this.presenter.setState(state);\n  }\n\n  public updateState(data: PanelTypes): void {\n    this.presenter.updateState(data);\n  }\n\n  public subscribe(cb: (data: ModelType) => void): void {\n    this.presenter.subscribe(cb);\n  }\n\n  private init(main: HTMLElement, options: IState): Presenter {\n    this.state = $.extend(\n      {\n        min: 0,\n        max: 100,\n        from: 0,\n        fromPercent: 0,\n        to: 100,\n        toPercent: 100,\n        step: 1,\n        view: false,\n        range: false,\n        flag: true,\n        progress: true,\n        scale: true,\n      },\n      options\n    );\n\n    this.presenter = new Presenter(main, this.state);\n    return this.presenter;\n  }\n}\n","import Model from '../model/Model';\nimport View from '../view/View';\nimport {\n  IState,\n  ModelType,\n  ModelUpdate,\n  PanelTypes,\n  ViewHandler,\n  ViewTypes,\n} from '../../types';\n\nexport default class Presenter {\n  private model: Model;\n\n  private view: View;\n\n  constructor(main: HTMLElement, state: IState) {\n    this.model = new Model(state);\n    this.view = new View(main);\n    this.init();\n  }\n\n  public getState(): ModelType {\n    return this.model.getState();\n  }\n\n  public setState(state: IState): void {\n    this.model.setState(state);\n  }\n\n  public updateState(data: PanelTypes): void {\n    this.model.updateState(data);\n  }\n\n  public subscribe(cb: (data: ModelType) => void): void {\n    this.model.subscribe(cb);\n  }\n\n  private init() {\n    const cbView = (data: ViewTypes) => {\n      switch (data.type) {\n        case ViewHandler.FROMCIRCLE:\n          this.model.setStateFrom(data.value);\n          break;\n        case ViewHandler.TOCIRCLE:\n          this.model.setStateTo(data.value);\n          break;\n        case ViewHandler.TRACK:\n          this.model.setStateFromOrTo(data.value);\n          break;\n        case ViewHandler.SCALE:\n          this.model.setStateFromOrTo(data.value);\n          break;\n        default:\n          throw new Error('there is no such event');\n      }\n    };\n    this.view.subscribe(cbView);\n\n    const cbModel = (data: ModelType) => {\n      switch (data.type) {\n        case ModelUpdate.UPDATE:\n          this.view.updateView(data.value);\n          break;\n        default:\n          throw new Error('no state');\n      }\n    };\n    this.model.subscribe(cbModel);\n\n    this.model.broadcast(this.model.getState());\n  }\n}\n","import Observer from '../observer/Observer';\nimport { IState, ModelType, ModelUpdate, PanelTypes } from '../../types';\n\nexport default class Model extends Observer<ModelType> {\n  private state: IState;\n\n  constructor(state: IState) {\n    super();\n    this.state = state;\n    this.setState(state);\n  }\n\n  public getState(): ModelType {\n    return { type: ModelUpdate.UPDATE, value: { ...this.state } };\n  }\n\n  public setStateFrom(valuePercent: number): void {\n    let cloneValuePercent = valuePercent;\n    if (valuePercent > this.state.toPercent)\n      cloneValuePercent = this.state.toPercent;\n    const value = this.calculateValue(cloneValuePercent);\n    this.setState({ fromPercent: cloneValuePercent, from: value });\n  }\n\n  public setStateTo(valuePercent: number): void {\n    let cloneValuePercent = valuePercent;\n    if (valuePercent < this.state.fromPercent)\n      cloneValuePercent = this.state.fromPercent;\n    const value = this.calculateValue(cloneValuePercent);\n    this.setState({ toPercent: cloneValuePercent, to: value });\n  }\n\n  public setStateFromOrTo(valuePercent: number): void {\n    if (this.state.fromPercent > valuePercent) {\n      this.setStateFrom(valuePercent);\n    } else {\n      this.setStateTo(valuePercent);\n    }\n  }\n\n  public setState(state: Partial<IState>): void {\n    if (!(typeof state.min === 'undefined')) {\n      if (!(typeof state.min === 'number')) throw new Error('invalid value');\n      this.state.min = Number(state.min);\n      this.state.from = this.state.min;\n    }\n\n    if (!(typeof state.max === 'undefined')) {\n      if (!(typeof state.max === 'number')) throw new Error('invalid value');\n      this.state.max = Number(state.max);\n      this.state.to = this.state.max;\n    }\n\n    if (!(typeof state.step === 'undefined')) {\n      if (!(typeof state.step === 'number')) throw new Error('invalid value');\n      this.state.step = Number(state.step);\n      this.state.from = this.state.min;\n      this.state.to = this.state.max;\n    }\n\n    if (!(typeof state.from === 'undefined')) {\n      if (!(typeof state.from === 'number')) throw new Error('invalid value');\n      this.state.from = Number(state.from);\n    }\n\n    if (!(typeof state.fromPercent === 'undefined'))\n      this.state.fromPercent = Number(state.fromPercent);\n\n    if (!(typeof state.to === 'undefined')) {\n      if (!(typeof state.to === 'number')) throw new Error('invalid value');\n      this.state.to = Number(state.to);\n    }\n\n    if (!(typeof state.toPercent === 'undefined'))\n      this.state.toPercent = Number(state.toPercent);\n\n    if (!(typeof state.view === 'undefined')) {\n      if (!(typeof state.view === 'boolean')) throw new Error('invalid value');\n      this.state.view = Boolean(state.view);\n    }\n\n    if (!(typeof state.range === 'undefined')) {\n      if (!(typeof state.range === 'boolean')) throw new Error('invalid value');\n      this.state.range = Boolean(state.range);\n      this.state.from = this.state.min;\n    }\n\n    if (!(typeof state.flag === 'undefined')) {\n      if (!(typeof state.flag === 'boolean')) throw new Error('invalid value');\n      this.state.flag = Boolean(state.flag);\n    }\n\n    if (!(typeof state.progress === 'undefined')) {\n      if (!(typeof state.progress === 'boolean'))\n        throw new Error('invalid value');\n      this.state.progress = Boolean(state.progress);\n    }\n\n    if (!(typeof state.scale === 'undefined')) {\n      if (!(typeof state.scale === 'boolean')) throw new Error('invalid value');\n      this.state.scale = Boolean(state.scale);\n    }\n\n    this.validation();\n  }\n\n  public updateState(data: PanelTypes): void {\n    const key = data.type;\n    const { value } = data;\n    this.setState({ [`${key}`]: value });\n  }\n\n  private calculateValue(valuePercent: number): number {\n    const { min, max, step } = this.state;\n    const stepCount: number = (max - min) / step;\n    const stepPercent: number = 100 / stepCount;\n    const stepPercentResult: number =\n      Math.round(valuePercent / stepPercent) * stepPercent;\n    return Number(((stepPercentResult / stepPercent) * step).toFixed()) + min;\n  }\n\n  private validation(): void {\n    if (this.state.min >= this.state.max) {\n      this.state.min = this.state.max - 1;\n      this.state.from = this.state.max - 1;\n    }\n\n    const generalValue = this.state.max - this.state.min;\n\n    if (this.state.step === 0) this.state.step = 1;\n    if (this.state.step < 0) this.state.step = Math.abs(this.state.step);\n    if (this.state.step > generalValue || this.state.step > generalValue)\n      this.state.step = generalValue;\n\n    const stepCount: number = generalValue / this.state.step;\n    const stepPercent: number = 100 / stepCount;\n\n    const fromMaxBool = this.state.from > this.state.max;\n    const fromMinBool = this.state.from < this.state.min;\n    const fromToBool = this.state.from > this.state.to;\n    const generalFrom = fromMinBool || fromMaxBool || fromToBool;\n\n    if (generalFrom) this.state.from = this.state.min;\n    this.state.fromPercent =\n      ((this.state.from - this.state.min) / this.state.step) * stepPercent;\n\n    const toMaxBool = this.state.to > this.state.max;\n    const toMinBool = this.state.to < this.state.min;\n    const toFromBool = this.state.to < this.state.from;\n    const generalTo = toMinBool || toMaxBool || toFromBool;\n\n    if (generalTo) this.state.to = this.state.max;\n    this.state.toPercent =\n      ((this.state.to - this.state.min) / this.state.step) * stepPercent;\n\n    this.broadcast({ type: ModelUpdate.UPDATE, value: { ...this.state } });\n  }\n}\n","import Observer from '../observer/Observer';\nimport TrackView from './TrackView';\nimport ProgressView from './ProgressView';\nimport CircleView from './CircleView';\nimport FlagView from './FlagView';\nimport ScaleView from './ScaleView';\nimport { IState, ViewHandler, ViewTypes } from '../../types';\n\nexport default class View extends Observer<ViewTypes> {\n  private main: HTMLElement;\n\n  private start: boolean;\n\n  private wrapper!: HTMLElement;\n\n  private slider!: HTMLElement;\n\n  private track!: TrackView;\n\n  private progress!: ProgressView;\n\n  private circle!: CircleView;\n\n  private flag!: FlagView;\n\n  private scale!: ScaleView;\n\n  private state!: IState;\n\n  constructor(main: HTMLElement) {\n    super();\n    this.main = main;\n    this.start = true;\n  }\n\n  public updateView(state: IState): void {\n    this.state = state;\n\n    if (this.start) {\n      this.render();\n      return;\n    }\n\n    this.toggleClassNameSlider();\n    this.track.updateElement(this.state);\n    this.progress.updateElement(this.state);\n    this.circle.updateElement(this.state);\n    this.flag.updateElement(this.state);\n    this.scale.updateElement(this.state);\n\n    if (this.state.progress) {\n      this.track.getElement().appendChild(this.progress.getElement());\n    } else {\n      this.progress.getElement().remove();\n    }\n\n    if (this.state.flag) {\n      this.slider.appendChild(this.flag.getElement());\n    } else {\n      this.flag.getElement().remove();\n    }\n\n    if (this.state.scale) {\n      this.slider.appendChild(this.scale.getElement());\n    } else {\n      this.scale.getElement().remove();\n    }\n  }\n\n  private render(): void {\n    this.start = false;\n\n    this.slider = this.createElement('slider__inner');\n    this.toggleClassNameSlider();\n\n    this.track = new TrackView(this.state);\n    this.track\n      .getElement()\n      .addEventListener('click', this.handleTrackClick.bind(this));\n    this.slider.appendChild(this.track.getElement());\n\n    this.progress = new ProgressView(this.state);\n    if (this.state.progress)\n      this.track.getElement().appendChild(this.progress.getElement());\n\n    this.circle = new CircleView(this.state);\n    this.circle\n      .getElement()\n      .querySelectorAll<HTMLDivElement>('div')\n      .forEach((circle) => {\n        circle.addEventListener(\n          'mousedown',\n          this.handleCircleMouseDown.bind(this)\n        );\n        circle.addEventListener(\n          'touchstart',\n          this.handleCircleMouseDown.bind(this)\n        );\n      });\n    this.slider.appendChild(this.circle.getElement());\n\n    this.flag = new FlagView(this.state);\n    this.flag\n      .getElement()\n      .querySelectorAll<HTMLDivElement>('div')\n      .forEach((flag) => {\n        flag.addEventListener('mousedown', this.handlePinMouseDown.bind(this));\n        flag.addEventListener('touchstart', this.handlePinMouseDown.bind(this));\n      });\n    if (this.state.flag) this.slider.appendChild(this.flag.getElement());\n\n    this.scale = new ScaleView(this.state);\n    this.scale\n      .getElement()\n      .querySelectorAll<HTMLDivElement>('.slider__item')\n      .forEach((item) =>\n        item.addEventListener('click', this.handleScaleClick.bind(this))\n      );\n    if (this.state.scale) this.slider.appendChild(this.scale.getElement());\n\n    this.wrapper = this.createElement('slider__wrapper');\n    this.wrapper.appendChild(this.slider);\n    this.main.appendChild(this.wrapper);\n  }\n\n  private handlePinMouseDown(evt: Event): void {\n    const pin: HTMLElement = <HTMLElement>evt.currentTarget;\n\n    const classNameBoolHMax = pin.classList.contains(\n      'slider__pin_position_maximum'\n    );\n    const classNameBoolVMax = pin.classList.contains(\n      'slider__pin-vertical_position_maximum'\n    );\n\n    let circle: HTMLElement | null = this.circle\n      .getElement()\n      .querySelector('div:first-child');\n\n    if (classNameBoolHMax || classNameBoolVMax)\n      circle = this.state.range\n        ? this.circle.getElement().querySelector('div:last-child')\n        : this.circle.getElement().querySelector('div:first-child');\n\n    if (circle !== null) this.replaceCircle(evt, circle);\n  }\n\n  private handleCircleMouseDown(evt: Event): void {\n    const circle: HTMLElement = <HTMLElement>evt.currentTarget;\n    this.replaceCircle(evt, circle);\n  }\n\n  private replaceCircle(evt: Event, circle: HTMLElement): void {\n    evt.preventDefault();\n\n    const onMouseMove = (evt: MouseEvent | TouchEvent): void => {\n      const getEvent = () =>\n        evt instanceof TouchEvent ? evt.targetTouches[0] : evt;\n      const event = getEvent();\n\n      const circleMin = circle.classList.contains(\n        'slider__circle_position_minimum'\n      );\n      const circleMax = circle.classList.contains(\n        'slider__circle_position_maximum'\n      );\n      const circleVMin = circle.classList.contains(\n        'slider__circle_position_vertical-minimum'\n      );\n      const circleVMax = circle.classList.contains(\n        'slider__circle_position_vertical-maximum'\n      );\n\n      let corner: number =\n        ((event.pageX - this.slider.offsetLeft) /\n          this.track.getElement().clientWidth) *\n        100;\n\n      if (this.state.view)\n        corner =\n          ((event.pageY - this.slider.offsetTop) /\n            this.track.getElement().clientHeight) *\n          100;\n\n      if (circleMin || circleVMin)\n        this.broadcast({ type: ViewHandler.FROMCIRCLE, value: corner });\n      if (circleMax || circleVMax)\n        this.broadcast({ type: ViewHandler.TOCIRCLE, value: corner });\n    };\n\n    const onMouseUp = () => {\n      document.removeEventListener('touchmove', onMouseMove);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('touchend', onMouseUp);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n\n    document.addEventListener('touchmove', onMouseMove);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('touchend', onMouseUp);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n\n  private handleTrackClick(evt: MouseEvent): void {\n    let corner: number =\n      (evt.offsetX / this.track.getElement().clientWidth) * 100;\n\n    if (this.state.view)\n      corner = (evt.offsetY / this.track.getElement().clientHeight) * 100;\n\n    this.broadcast({ type: ViewHandler.TRACK, value: corner });\n  }\n\n  private handleScaleClick(evt: MouseEvent): void {\n    const scale: HTMLElement = <HTMLElement>evt.currentTarget;\n    const corner: number = parseFloat(scale.style.left);\n    this.broadcast({ type: ViewHandler.SCALE, value: corner });\n  }\n\n  private createElement(className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    newElement.className = className;\n    return newElement;\n  }\n\n  private toggleClassNameSlider(): void {\n    const className = 'slider__inner_size_height';\n\n    if (this.state.view) {\n      this.slider.classList.add(className);\n    } else {\n      this.slider.classList.remove(className);\n    }\n  }\n}\n","import { IState } from '../../types';\n\nexport default class TrackView {\n  private element!: HTMLElement;\n\n  constructor(state: IState) {\n    this.createElement(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const className = 'slider__track_size_height';\n\n    if (state.view) {\n      this.element.classList.add(className);\n    } else {\n      this.element.classList.remove(className);\n    }\n\n    return this.element;\n  }\n\n  private createElement(state: IState): void {\n    this.element = document.createElement('div');\n    this.element.className = 'slider__track';\n    this.updateElement(state);\n  }\n}\n","import { IState } from '../../types';\n\nexport default class ProgressView {\n  private element!: HTMLElement;\n\n  constructor(state: IState) {\n    this.createElement(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const { view, fromPercent, toPercent } = state;\n    const className = 'slider__bar_size_width';\n\n    this.element.style.top = '';\n    this.element.style.height = '';\n    this.element.style.marginLeft = '';\n    this.element.style.marginRight = '';\n\n    if (view) {\n      this.element.classList.add(className);\n      this.element.style.top = `${fromPercent}%`;\n      this.element.style.height = `${toPercent - fromPercent}%`;\n    } else {\n      this.element.classList.remove(className);\n      this.element.style.marginLeft = `${fromPercent}%`;\n      this.element.style.marginRight = `${100 - toPercent}%`;\n    }\n\n    return this.element;\n  }\n\n  private createElement(state: IState): void {\n    this.element = document.createElement('div');\n    this.element.className = 'slider__bar';\n    this.updateElement(state);\n  }\n}\n","import { IState } from '../../types';\n\nexport default class CircleView {\n  private element!: HTMLElement;\n\n  private quantityCircle: number;\n\n  private circle: HTMLElement[];\n\n  constructor(state: IState) {\n    this.quantityCircle = 2;\n    this.circle = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const { range, view, fromPercent, toPercent } = state;\n\n    for (let index = 0; index < this.quantityCircle; index += 1) {\n      this.circle[index].className = '';\n      this.circle[index].style.left = '';\n      this.circle[index].style.top = '';\n\n      const getCircleMin = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_minimum';\n        this.circle[index].style.left = `${fromPercent}%`;\n      };\n\n      const getCircleMax = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_maximum';\n        this.circle[index].style.left = `${toPercent}%`;\n      };\n\n      const getCircleVerticalMin = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_vertical-minimum';\n        this.circle[index].style.top = `${fromPercent}%`;\n      };\n\n      const getCircleVerticalMax = () => {\n        this.circle[index].className =\n          'slider__circle slider__circle_position_vertical-maximum';\n        this.circle[index].style.top = `${toPercent}%`;\n      };\n\n      const indexAndRangeBool = index && range;\n\n      if (!indexAndRangeBool && !view) getCircleMax();\n      if (!indexAndRangeBool && view) getCircleVerticalMax();\n      if (range && !view) {\n        if (!index) {\n          getCircleMin();\n        } else {\n          getCircleMax();\n        }\n      }\n\n      if (range && view) {\n        if (!index) {\n          getCircleVerticalMin();\n        } else {\n          getCircleVerticalMax();\n        }\n      }\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: IState): void {\n    this.element = this.createElement('slider__circles');\n\n    for (let i = 0; i < this.quantityCircle; i += 1) {\n      this.circle[i] = this.createElement();\n      this.element.appendChild(this.circle[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className?: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    if (className) newElement.className = className;\n    return newElement;\n  }\n}\n","import { IState } from '../../types';\n\nexport default class FlagView {\n  private element!: HTMLElement;\n\n  private quantityPin: number;\n\n  private pin: HTMLElement[];\n\n  constructor(state: IState) {\n    this.quantityPin = 2;\n    this.pin = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const { range, view, fromPercent, toPercent, from, to } = state;\n\n    for (let index = 0; index < this.quantityPin; index += 1) {\n      this.pin[index].className = '';\n      this.pin[index].textContent = '';\n      this.pin[index].style.left = '';\n      this.pin[index].style.top = '';\n\n      const getPinMin = () => {\n        this.pin[index].className = 'slider__pin slider__pin_position_minimum';\n        this.pin[index].textContent = String(from);\n        this.pin[index].style.left = `${fromPercent}%`;\n      };\n\n      const getPinMax = () => {\n        this.pin[index].className = 'slider__pin slider__pin_position_maximum';\n        this.pin[index].textContent = String(to);\n        this.pin[index].style.left = `${toPercent}%`;\n      };\n\n      const getPinVerticalMin = () => {\n        this.pin[index].className =\n          'slider__pin-vertical slider__pin-vertical_position_minimum';\n        this.pin[index].textContent = String(from);\n        this.pin[index].style.top = `${fromPercent}%`;\n      };\n\n      const getPinVerticalMax = () => {\n        this.pin[index].className =\n          'slider__pin-vertical slider__pin-vertical_position_maximum';\n        this.pin[index].textContent = String(to);\n        this.pin[index].style.top = `${toPercent}%`;\n      };\n\n      const indexAndRangeBool = index && range;\n\n      if (!indexAndRangeBool && !view) getPinMax();\n      if (!indexAndRangeBool && view) getPinVerticalMax();\n      if (range && !view) {\n        if (!index) {\n          getPinMin();\n        } else {\n          getPinMax();\n        }\n      }\n\n      if (range && view) {\n        if (!index) {\n          getPinVerticalMin();\n        } else {\n          getPinVerticalMax();\n        }\n      }\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: IState): void {\n    this.element = this.createElement('slider__pins');\n\n    for (let i = 0; i < this.quantityPin; i += 1) {\n      this.pin[i] = this.createElement();\n      this.element.appendChild(this.pin[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className?: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    if (className) newElement.className = className;\n    return newElement;\n  }\n}\n","import { IState } from '../../types';\n\nexport default class ScaleView {\n  private element!: HTMLElement;\n\n  private quantityItem: number;\n\n  private item: HTMLElement[];\n\n  private quantity: HTMLElement[];\n\n  constructor(state: IState) {\n    this.quantityItem = 20;\n    this.item = [];\n    this.quantity = [];\n    this.createElements(state);\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    const { min, max, step, view } = state;\n    const classNameList = 'slider__list_state_transformed';\n    const classNameQuantity = 'slider__quantity_state_transformed';\n\n    const stepCount: number = (max - min) / step;\n    const stepPercent: number = 100 / stepCount;\n    let scale = 1;\n    if (stepCount > this.quantityItem)\n      scale = Math.ceil(stepCount / this.quantityItem);\n    let percent = stepPercent * scale;\n\n    for (let i = 0; i <= this.quantityItem; i += 1) {\n      if (view) {\n        this.element.classList.add(classNameList);\n        this.quantity[i].classList.add(classNameQuantity);\n      } else {\n        this.element.classList.remove(classNameList);\n        this.quantity[i].classList.remove(classNameQuantity);\n      }\n\n      if (i === 0) {\n        this.item[i].style.left = '0%';\n        this.quantity[i].textContent = String(min);\n        continue;\n      }\n\n      if (i === 20) {\n        this.item[i].style.left = '100%';\n        this.quantity[i].textContent = String(max);\n        continue;\n      }\n\n      this.item[i].style.display = '';\n\n      if (percent > 99) {\n        this.item[i].style.display = 'none';\n        continue;\n      }\n\n      const value = Number(((percent / stepPercent) * step).toFixed()) + min;\n      this.quantity[i].textContent = String(value);\n      this.item[i].style.left = `${percent}%`;\n      percent += stepPercent * scale;\n    }\n\n    return this.element;\n  }\n\n  private createElements(state: IState): void {\n    this.element = this.createElement('slider__list');\n\n    for (let i = 0; i <= this.quantityItem; i += 1) {\n      this.item[i] = this.createElement('slider__item');\n      this.item[i].textContent = '|';\n\n      this.quantity[i] = this.createElement('slider__quantity');\n      this.item[i].appendChild(this.quantity[i]);\n      this.element.appendChild(this.item[i]);\n    }\n\n    this.updateElement(state);\n  }\n\n  private createElement(className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement('div');\n    newElement.className = className;\n    return newElement;\n  }\n}\n","import Slider from './Slider';\nimport Panel from './Panel';\n\n$.fn.panel = function f(slider: Slider) {\n  return new Panel(this[0], slider);\n};\n","import Slider from './Slider';\nimport ConfiguringPanel from './components/configuringPanel/ConfiguringPanel';\nimport { ModelType, ModelUpdate, PanelHandler, PanelTypes } from './types';\n\nexport default class Panel {\n  private configuringPanel!: ConfiguringPanel;\n\n  private main: HTMLElement;\n\n  private slider: Slider;\n\n  constructor(main: HTMLElement, slider: Slider) {\n    this.main = main;\n    this.slider = slider;\n    this.init();\n  }\n\n  private init(): void {\n    this.configuringPanel = new ConfiguringPanel(this.slider.getState());\n\n    const main: HTMLElement | null =\n      this.main.querySelector('.slider__wrapper');\n    if (main !== null) main.appendChild(this.configuringPanel.getElement());\n\n    this.subscribe();\n  }\n\n  private subscribe(): void {\n    const cbPanel = (data: PanelTypes) => {\n      switch (data.type) {\n        case PanelHandler.MIN:\n          this.slider.updateState(data);\n          break;\n        case PanelHandler.MAX:\n          this.slider.updateState(data);\n          break;\n        case PanelHandler.STEP:\n          this.slider.updateState(data);\n          break;\n        case PanelHandler.VIEW:\n          this.slider.updateState(data);\n          break;\n        case PanelHandler.RANGE:\n          this.slider.updateState(data);\n          break;\n        case PanelHandler.FLAG:\n          this.slider.updateState(data);\n          break;\n        case PanelHandler.PROGRESS:\n          this.slider.updateState(data);\n          break;\n        case PanelHandler.SCALE:\n          this.slider.updateState(data);\n          break;\n        default:\n          throw new Error('there is no such event');\n      }\n    };\n    this.configuringPanel.subscribe(cbPanel);\n\n    const cbModel = (data: ModelType) => {\n      switch (data.type) {\n        case ModelUpdate.UPDATE:\n          this.configuringPanel.updateElement(data.value);\n          break;\n        default:\n          throw new Error('no state');\n      }\n    };\n    this.slider.subscribe(cbModel);\n  }\n}\n","import Observer from '../observer/Observer';\nimport { IState, IData, PanelHandler, PanelTypes } from '../../types';\n\nexport default class ConfiguringPanel extends Observer<PanelTypes> {\n  private state: IState;\n\n  private data: IData[];\n\n  private element!: HTMLElement;\n\n  private label: HTMLElement[];\n\n  private input: HTMLInputElement[];\n\n  constructor(state: IState) {\n    super();\n    this.state = state;\n    this.data = [\n      {\n        label: 'Минимальное значение',\n        dataset: 'min',\n        type: 'number',\n      },\n      {\n        label: 'Максимальное значение',\n        dataset: 'max',\n        type: 'number',\n      },\n      {\n        label: 'От',\n        dataset: 'from',\n        type: 'number',\n        readonly: true,\n      },\n      {\n        label: 'До',\n        dataset: 'to',\n        type: 'number',\n        readonly: true,\n      },\n      {\n        label: 'Шаг',\n        dataset: 'step',\n        type: 'number',\n      },\n      {\n        label: 'Вертикальный',\n        dataset: 'view',\n        type: 'checkbox',\n      },\n      {\n        label: 'Интервал',\n        dataset: 'range',\n        type: 'checkbox',\n      },\n      {\n        label: 'Значение',\n        dataset: 'flag',\n        type: 'checkbox',\n      },\n      {\n        label: 'Шкала',\n        dataset: 'scale',\n        type: 'checkbox',\n      },\n      {\n        label: 'Прогресс',\n        dataset: 'progress',\n        type: 'checkbox',\n      },\n    ];\n\n    this.label = [];\n    this.input = [];\n    this.createElements();\n  }\n\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  public updateElement(state: IState): HTMLElement {\n    this.state = state;\n    const { range, from, to, min, max, step } = this.state;\n\n    this.data.forEach((elem, i) => {\n      if (this.input[i].dataset.name === 'min')\n        this.input[i].value = String(min);\n      if (this.input[i].dataset.name === 'max')\n        this.input[i].value = String(max);\n      if (this.input[i].dataset.name === 'step')\n        this.input[i].value = String(step);\n      if (this.input[i].dataset.name === 'from') {\n        this.label[i].style.display = range ? '' : 'none';\n        this.input[i].value = String(from);\n      }\n\n      if (this.input[i].dataset.name === 'to') {\n        this.label[i].textContent = range ? 'До' : 'Текущее значение';\n        this.input[i] = this.createElementInput(this.data[3]);\n        this.input[i].value = String(to);\n        this.label[i].appendChild(this.input[i]);\n      }\n    });\n\n    return this.element;\n  }\n\n  private createElements(): void {\n    this.element = this.createElement('div', 'slider__labels');\n\n    this.data.forEach((data, i) => {\n      this.label[i] = this.createElementLabel(data, i);\n      this.element.appendChild(this.label[i]);\n    });\n\n    this.updateElement(this.state);\n  }\n\n  private createElement(tag: string, className: string): HTMLElement {\n    const newElement: HTMLElement = document.createElement(tag);\n    newElement.className = className;\n    return newElement;\n  }\n\n  private createElementLabel(data: IData, index: number): HTMLElement {\n    const labelElement = this.createElement('label', 'slider__label');\n    labelElement.textContent = data.label;\n\n    const inputMin = data.dataset === 'min';\n    const inputMax = data.dataset === 'max';\n    const inputFrom = data.dataset === 'from';\n    const inputTo = data.dataset === 'to';\n    const inputStep = data.dataset === 'step';\n    const generalInput =\n      inputMin || inputMax || inputFrom || inputTo || inputStep;\n\n    if (generalInput)\n      labelElement.classList.add('slider__label_state_displayed');\n\n    this.input[index] = this.createElementInput(data);\n    this.input[index].addEventListener(\n      'change',\n      this.handleInputChange.bind(this)\n    );\n    labelElement.appendChild(this.input[index]);\n\n    return labelElement;\n  }\n\n  private createElementInput(data: IData): HTMLInputElement {\n    const { range, view, flag, scale, progress } = this.state;\n    const inputElement = <HTMLInputElement>(\n      this.createElement('input', `slider__${data.dataset}`)\n    );\n    inputElement.dataset.name = data.dataset;\n    inputElement.type = data.type;\n\n    if (data.readonly) inputElement.readOnly = data.readonly;\n    if (data.dataset === 'view') inputElement.checked = view;\n    if (data.dataset === 'range') inputElement.checked = range;\n    if (data.dataset === 'flag') inputElement.checked = flag;\n    if (data.dataset === 'scale') inputElement.checked = scale;\n    if (data.dataset === 'progress') inputElement.checked = progress;\n\n    return inputElement;\n  }\n\n  private handleInputChange(evt: Event): void {\n    const input = <HTMLInputElement>evt.currentTarget;\n\n    switch (input.dataset.name) {\n      case PanelHandler.MIN:\n        this.broadcast({ type: PanelHandler.MIN, value: Number(input.value) });\n        break;\n      case PanelHandler.MAX:\n        this.broadcast({ type: PanelHandler.MAX, value: Number(input.value) });\n        break;\n      case PanelHandler.STEP:\n        this.broadcast({ type: PanelHandler.STEP, value: Number(input.value) });\n        break;\n      case PanelHandler.VIEW:\n        this.broadcast({ type: PanelHandler.VIEW, value: input.checked });\n        break;\n      case PanelHandler.RANGE:\n        this.broadcast({ type: PanelHandler.RANGE, value: input.checked });\n        break;\n      case PanelHandler.FLAG:\n        this.broadcast({ type: PanelHandler.FLAG, value: input.checked });\n        break;\n      case PanelHandler.PROGRESS:\n        this.broadcast({ type: PanelHandler.PROGRESS, value: input.checked });\n        break;\n      case PanelHandler.SCALE:\n        this.broadcast({ type: PanelHandler.SCALE, value: input.checked });\n        break;\n      default:\n        throw new Error('invalid type');\n    }\n  }\n}\n"],"sourceRoot":""}